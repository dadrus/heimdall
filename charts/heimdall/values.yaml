# Copyright 2022 Dimitrij Drus <dadrus@gmx.de>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

# Select the operation mode. Can be decision, or proxy
# Defaults to "decision" as operating in proxy mode makes most probably only sense
# if heimdall is installed as a side card either in the Ingress Controller itself,
# or in each pod before the actual business service.
operationMode: decision # decision or proxy

# Default values for heimdall.
image:
  repository: ghcr.io/dadrus/heimdall
  pullPolicy: IfNotPresent
  tag: ""
  pullSecrets: [ ]

nameOverride: ""
fullnameOverride: ""

# Deployment configuration
deployment:
  # Remove the curly braces after 'annotations:' if you want to specify annotations
  annotations: { }
  # Remove the curly braces after 'labels:' if you do want to specify additional labels
  labels: { }

  # This configuration is applied directly to the pods and not higher objects
  pod:
    securityContext:
      fsGroup: 10001
      runAsUser: 10001
      runAsGroup: 10001
      runAsNonRoot: true

    # Remove the curly braces after 'annotations:' if you want to specify annotations
    annotations: { }

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false

  # Remove the curly braces after 'resources:' if you want to specify resources
  resources: { }
    # E.g.:
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  # Only used if autoscaling is disabled (see below)
  replicaCount: 2

  # Configures HorizontalPodAutoscaler
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # Remove the curly braces after 'nodeSelector:' if you want to specify nodeSelector
  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  # Optional volumes to be used
  volumes: [ ]

  # Optional volume mounts to be used
  volumeMounts: [ ]

# Configures k8s services (decision, proxy, management)
service:
  # Remove the curly braces after 'labels:' if you do want to specify additional labels
  labels: { }
  # Remove the curly braces after 'annotations:' if you want to specify annotations
  annotations: { }

  # Only used if "operationMode" is set to "decision"
  decision:
    # Service port
    port: 4456
    # Service port name
    name: decision
  # Only used if "operationMode" is set to "proxy"
  proxy:
    # Service port
    port: 4455
    # Service port name
    name: proxy
  management:
    # Service port
    port: 4457
    # Service port name
    name: management
  # Only used if rules.providers.kubernetes.tls is configured
  admissionController:
    # Service port
    port: 4458
    # Service port name
    name: admission-controller

# Only used if rules.providers.kubernetes.tls is configured
admissionController:
  # Remove the curly braces after 'labels:' if you do want to specify additional labels
  labels: { }

  # Remove the curly braces after 'annotations:' if you want to specify annotations
  # e.g. cert-manager.io/inject-ca-from: <secret name>, or service.beta.openshift.io/inject-cabundle=true
  annotations: { }

  # Remove the curly braces after 'namespaceSelector:' if you want to specify a namespaceSelector
  namespaceSelector: {}

  # Set to the required value if you want to specify the caBundle by yourself (see annotations for alternative)
  caBundle: ""

  # Set to another value if required
  timeoutSeconds: 5

# Configures arbitrary environment variables for the deployment
# The value can be either a string (propagated to value) or an object (propagated to valueFrom)
# Example:
# env:
#   ENV_VAR_CONFIGMAP:
#     configMapKeyRef:
#       name: "my-configmap"
#       key: "EXAMPLE_KEY"
#   ENV_VAR_SIMPLE: "value"
env: {}

# Configures extra environment to be pulled from referenced configmaps/secrets
# directly mapped to envFrom
envFrom: []

# Optional flags for heimdall to use
extraArgs: []

# heimdall config defaults
# DO NOT OVERRIDE the values here. Use heimdall config yaml file instead!
serve:
  decision:
    port: 4456
  proxy:
    port: 4455
  management:
    port: 4457
profiling:
  enabled: false
  port: 10251
  host: 0.0.0.0 # to enable scraping of profiling information by corresponding agents.



