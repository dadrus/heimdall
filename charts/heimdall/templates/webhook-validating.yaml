{{- $providers := default dict .Values.providers }}
{{- $kubernetes := default dict $providers.kubernetes }}
{{- if $kubernetes.tls }}
# Only active if .Values.rules.providers.kubernetes.tls is configured
{{- $data := dict "Release" .Release "Values" .Values "Chart" .Chart "Component" "webhooks.validation" }}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "heimdall.fullname" $data }}
  labels:
    {{- include "heimdall.labels" $data | nindent 4 }}
  {{- with (include "heimdall.annotations" $data) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
webhooks:
  - name: validation-webhook.heimdall.dadrus.github.com
    admissionReviewVersions: [ "v1" ]
    sideEffects: None
    timeoutSeconds: {{ .Values.webhooks.validation.timeoutSeconds }}
    {{- with .Values.webhooks.validation.namespaceSelector }}
    namespaceSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    rules:
      - apiGroups:   ["heimdall.dadrus.github.com"]
        apiVersions: ["v1beta1"]
        operations:  ["CREATE", "UPDATE"]
        resources:   ["rulesets"]
        scope:       "Namespaced"
    matchConditions:
      # Match only those rule sets, which relate to the configured auth class
      - name: 'auth-class-filter'
        expression: 'object.spec.authClassName == {{ default (quote "default") (quote $kubernetes.auth_class) }}'
    clientConfig:
      {{- with .Values.webhooks.caBundle }}
      caBundle: {{ . }}
      {{- end }}
      service:
        namespace: {{ include "heimdall.namespace" $data }}
        name: {{ include "heimdall.service" ( dict "Release" .Release "Values" .Values "Chart" .Chart "Component" "service.validationWebhook" ) }}
        path: "/validate"
        port: {{ .Values.service.validationWebhook.port }}
{{- end }}