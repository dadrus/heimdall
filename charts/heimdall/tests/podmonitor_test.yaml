suite: test suite for the podmonitor
templates:
  - podmonitor.yaml
tests:
  - it: should not be configured by default although enabled
    asserts:
      - hasDocuments:
          count: 0

  - it: should not be configured if everything is set up, but the PodMonitor CRD is not installed
    set:
      metrics.enabled: true
      podMonitor.enabled: true
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - hasDocuments:
          count: 0

  - it: should not be configured if everything is set up, but the OTEL exporter not set to prometheus
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      metrics.enabled: true
      podMonitor.enabled: true
    asserts:
      - hasDocuments:
          count: 0

  - it: should not be configured if everything is set up, but metrics disabled
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      metrics.enabled: false
      podMonitor.enabled: true
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - hasDocuments:
          count: 0

  - it: should not be configured if everything is set up, but podMonitor disabled
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      metrics.enabled: true
      podMonitor.enabled: false
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - hasDocuments:
          count: 0

  - it: should be configured if all prerequisites are satisfied
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      metrics.enabled: true
      podMonitor.enabled: true
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodMonitor
      - isAPIVersion:
          of: monitoring.coreos.com/v1

  - it: should be configured with default settings, metrics exporter set to prometheus and podmonitors CRD present
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodMonitor
      - isAPIVersion:
          of: monitoring.coreos.com/v1

  - it: name should be set with default name
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-heimdall

  - it: name should be set with overwritten name
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    release:
      name: test-release
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      nameOverride: foo
    asserts:
      - equal:
          path: metadata.name
          value: test-release-foo

  - it: namespace should be set to the release namespace value if not configured
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    release:
      namespace: test-namespace
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - equal:
          path: metadata.namespace
          value: test-namespace

  - it: namespace should be set to the podMonitor.namespace if provided
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    release:
      namespace: test-namespace
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.namespace: foo
    asserts:
      - equal:
          path: metadata.namespace
          value: foo

  - it: should set default labels with default values
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - isSubset:
          path: metadata.labels
          content:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: heimdall
            app.kubernetes.io/version: latest
      - matchRegex:
          path: metadata.labels["helm.sh/chart"]
          pattern: heimdall-*

  - it: should set custom labels in addition to default ones if provided
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.labels:
        foo: bar
    asserts:
      - isSubset:
          path: metadata.labels
          content:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: heimdall
            app.kubernetes.io/version: latest
            foo: bar
      - matchRegex:
          path: metadata.labels["helm.sh/chart"]
          pattern: heimdall-*

  - it: should set default labels with overwrites
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    chart:
      appVersion: 1.0.0
      version: 2.0.0
    release:
      name: test-release
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      nameOverride: foo
    asserts:
      - equal:
          path: metadata.labels
          value:
            app.kubernetes.io/instance: test-release
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: foo
            app.kubernetes.io/version: 1.0.0
            helm.sh/chart: heimdall-2.0.0

  - it: should configure selector with the required labels and values
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    release:
      name: test-release
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      nameOverride: foo
    asserts:
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/instance: test-release
            app.kubernetes.io/name: foo

  - it: jobName should not be set by default
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - notExists:
          path: spec.jobLabel

  - it: jobLabel can be configured
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.jobLabel: "foo"
    asserts:
      - equal:
          path: spec.jobLabel
          value: foo

  - it: podTargetLabels should not be set by default
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - notExists:
          path: spec.podTargetLabels

  - it: podTargetLabels can be configured with custom values
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.targetLabels:
        - foo
        - bar
    asserts:
      - equal:
          path: spec.podTargetLabels
          value:
            - foo
            - bar

  - it: namespace selector should be configured to the namespace heimdall is deployed into
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    release:
      namespace: test
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - equal:
          path: spec.namespaceSelector.matchNames
          value:
            - test

  - it: podMetricsEndpoints should be configured by default with one entry and default values
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
    asserts:
      - equal:
          path: spec.podMetricsEndpoints
          value:
            - path: "/metrics"
              port: http-metrics
              scheme: http
              interval: 30s
              scrapeTimeout: 30s

  - it: scrape interval can be reconfigured to custom value for the podMetricsEndpoints entry
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.interval: 1m
    asserts:
      - equal:
          path: spec.podMetricsEndpoints
          value:
            - path: "/metrics"
              port: http-metrics
              scheme: http
              interval: 1m
              scrapeTimeout: 30s

  - it: scrape interval can omitted from the podMetricsEndpoints entry
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.interval: ""
    asserts:
      - equal:
          path: spec.podMetricsEndpoints
          value:
            - path: "/metrics"
              port: http-metrics
              scheme: http
              scrapeTimeout: 30s

  - it: scrape timeout can be reconfigured to custom value for the podMetricsEndpoints entry
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.scrapeTimeout: 1m
    asserts:
      - equal:
          path: spec.podMetricsEndpoints
          value:
            - path: "/metrics"
              port: http-metrics
              scheme: http
              interval: 30s
              scrapeTimeout: 1m

  - it: scrape timeout can omitted from the podMetricsEndpoints entry
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.scrapeTimeout: ""
    asserts:
      - equal:
          path: spec.podMetricsEndpoints
          value:
            - path: "/metrics"
              port: http-metrics
              scheme: http
              interval: 30s

  - it: metricRelabelings should be configurable for the podMetricsEndpoints entry
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.metricRelabelings:
        - separator: "-"
    asserts:
      - equal:
          path: spec.podMetricsEndpoints
          value:
            - path: "/metrics"
              port: http-metrics
              scheme: http
              interval: 30s
              scrapeTimeout: 30s
              metricRelabelings:
                - separator: "-"

  - it: relabelings should be configurable for the podMetricsEndpoints entry
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    set:
      env.OTEL_METRICS_EXPORTER: "prometheus"
      podMonitor.relabelings:
        - separator: "-"
    asserts:
      - equal:
          path: spec.podMetricsEndpoints
          value:
            - path: "/metrics"
              port: http-metrics
              scheme: http
              interval: 30s
              scrapeTimeout: 30s
              relabelings:
                - separator: "-"