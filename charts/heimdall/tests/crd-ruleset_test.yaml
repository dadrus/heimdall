suite: test suite for ruleset crd
templates:
  - crds/ruleset.yaml
tests:
  - it: should not be configured by default
    asserts:
      - hasDocuments:
          count: 0

  - it: should be configured if enabled
    set:
      crds.enabled: true
    asserts:
      - isKind:
          of: CustomResourceDefinition
      - isAPIVersion:
          of: apiextensions.k8s.io/v1

  - it: name should be set to rulesets.heimdall.dadrus.github.com
    set:
      crds.enabled: true
    asserts:
      - equal:
          path: metadata.name
          value: rulesets.heimdall.dadrus.github.com

  - it: namespace should not be set
    release:
      namespace: test-namespace
    set:
      crds.enabled: true
    asserts:
      - notExists:
          path: metadata.namespace

  - it: should set default labels with overwrites
    chart:
      appVersion: 1.0.0
      version: 2.0.0
    release:
      name: test-release
    set:
      nameOverride: foo
      crds.enabled: true
    asserts:
      - equal:
          path: metadata.labels
          value:
            app.kubernetes.io/instance: test-release
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: foo
            app.kubernetes.io/version: 1.0.0
            helm.sh/chart: heimdall-2.0.0

  - it: should set keep helm resource policy annotation by default
    set:
      crds.enabled: true
    asserts:
      - equal:
          path: metadata.annotations
          value:
            helm.sh/resource-policy: keep

  - it: should not set any annotations if keep resource policy is disabled and no other annotations are configured
    set:
      crds:
        enabled: true
        keep: false
    asserts:
      - isNullOrEmpty:
          path: metadata.annotations

  - it: should set custom annotations if conversion and annotations are configured
    set:
      crds.enabled: true
      webhooks.conversion.annotations:
        foo: bar
      providers.kubernetes.tls.key_store.path: /path/to/file.pem
    asserts:
      - equal:
          path: metadata.annotations
          value:
            helm.sh/resource-policy: keep
            foo: bar

  - it: should set only custom annotations if conversion and annotations are configured, but crds.keep is false
    set:
      crds.enabled: true
      crds.keep: false
      webhooks.conversion.annotations:
        foo: bar
      providers.kubernetes.tls.key_store.path: /path/to/file.pem
    asserts:
      - equal:
          path: metadata.annotations
          value:
            foo: bar

  - it: group should be heimdall.dadrus.github.com
    set:
      crds.enabled: true
    asserts:
      - equal:
          path: spec.group
          value: heimdall.dadrus.github.com

  - it: scope should be namespaced
    set:
      crds.enabled: true
    asserts:
      - equal:
          path: spec.scope
          value: Namespaced

  - it: should set expected names
    set:
      crds.enabled: true
    asserts:
      - equal:
          path: spec.names
          value:
            kind: RuleSet
            plural: rulesets
            singular: ruleset
            listKind: RuleSetList

  - it: conversion strategy should be None of TLS is not configured for the kubernetes provider
    set:
      crds.enabled: true
    asserts:
      - equal:
          path: spec.conversion
          value:
            strategy: None

  - it: conversion strategy should be Webhook if TLS is configured for the kubernetes provider
    set:
      crds.enabled: true
      providers.kubernetes.tls.key_store.path: /path/to/file.pem
    asserts:
      - equal:
          path: spec.conversion
          value:
            strategy: Webhook
            webhook:
              conversionReviewVersions: [ "v1" ]
              clientConfig:
                service:
                  name: RELEASE-NAME-heimdall-conversion-v1beta1
                  namespace: NAMESPACE
                  path: "/convert"
                  port: 4459

  - it: should allow webhook customization
    release:
      name: foo
      namespace: bar
    set:
      crds.enabled: true
      webhooks:
        caBundle: foobar
      service.conversionWebhook.port: 1234
      providers.kubernetes.tls.key_store.path: /path/to/file.pem
    asserts:
      - equal:
          path: spec.conversion
          value:
            strategy: Webhook
            webhook:
              conversionReviewVersions: [ "v1" ]
              clientConfig:
                caBundle: foobar
                service:
                  name: foo-heimdall-conversion-v1beta1
                  namespace: bar
                  path: "/convert"
                  port: 1234

  - it: should contain two versions - v1alpha4 and v1beta1
    set:
      crds.enabled: true
    asserts:
      - lengthEqual:
          path: spec.versions
          count: 2
      - equal:
          path: spec.versions[0].name
          value: v1alpha4
      - equal:
          path: spec.versions[1].name
          value: v1beta1

  - it: v1alpha4 should be served and be also the storage version by default
    set:
      crds.enabled: true
    asserts:
      - equal:
          path: spec.versions[0].name
          value: v1alpha4
      - equal:
          path: spec.versions[0].served
          value: true
      - equal:
          path: spec.versions[0].storage
          value: true

  - it: v1beta1 should be served and not be the storage version by default
    set:
      crds.enabled: true
    asserts:
      - equal:
          path: spec.versions[1].name
          value: v1beta1
      - equal:
          path: spec.versions[1].served
          value: true
      - equal:
          path: spec.versions[1].storage
          value: false

  - it: should be able to configure v1beta1 as storage version
    set:
      crds.enabled: true
      crds.storageVersion: v1beta1
    asserts:
      - equal:
          path: spec.versions[1].name
          value: v1beta1
      - equal:
          path: spec.versions[1].served
          value: true
      - equal:
          path: spec.versions[1].storage
          value: true