suite: test suite for ruleset crd
templates:
  - crds/ruleset.yaml
tests:
  - it: should be configured on first time install
    asserts:
      - hasDocuments:
          count: 1

  - it: should not be configured for upgrades by default
    release:
      upgrade: true
    asserts:
      - hasDocuments:
          count: 0

  - it: should be configured for upgrades if explicitly enabled
    release:
      upgrade: true
    set:
      crds.updateEnabled: true
    asserts:
      - hasDocuments:
          count: 1

  - it: name should be set to rulesets.heimdall.dadrus.github.com
    asserts:
      - equal:
          path: metadata.name
          value: rulesets.heimdall.dadrus.github.com

  - it: namespace should not be set
    release:
      namespace: test-namespace
    asserts:
      - notExists:
          path: metadata.namespace

  - it: should set default labels with overwrites
    chart:
      appVersion: 1.0.0
      version: 2.0.0
    release:
      name: test-release
    set:
      nameOverride: foo
    asserts:
      - equal:
          path: metadata.labels
          value:
            app.kubernetes.io/instance: test-release
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: foo
            app.kubernetes.io/version: 1.0.0
            helm.sh/chart: heimdall-2.0.0

  - it: should set keep helm resource policy annotation by default
    asserts:
      - equal:
          path: metadata.annotations
          value:
            helm.sh/resource-policy: keep

  - it: should set custom annotations if these are configured in addition to helm.sh/resource-policy annotation
    set:
      webhooks.conversion.annotations:
        foo: bar
      providers.kubernetes.tls.key_store.path: /path/to/file.pem
    asserts:
      - equal:
          path: metadata.annotations
          value:
            helm.sh/resource-policy: keep
            foo: bar

  - it: group should be heimdall.dadrus.github.com
    asserts:
      - equal:
          path: spec.group
          value: heimdall.dadrus.github.com

  - it: scope should be namespaced
    asserts:
      - equal:
          path: spec.scope
          value: Namespaced

  - it: should set expected names
    asserts:
      - equal:
          path: spec.names
          value:
            kind: RuleSet
            plural: rulesets
            singular: ruleset
            listKind: RuleSetList

  - it: conversion strategy should not be configured for first time install
    asserts:
      - notExists:
          path: spec.conversion

  - it: conversion strategy should be None for upgrades if TLS is not configured for the kubernetes provider
    release:
      upgrade: true
    set:
      crds.updateEnabled: true
    asserts:
      - equal:
          path: spec.conversion
          value:
            strategy: None

  - it: conversion strategy should be Webhook for upgrades if TLS is configured for the kubernetes provider
    release:
      upgrade: true
    set:
      crds.updateEnabled: true
      providers.kubernetes.tls.key_store.path: /path/to/file.pem
    asserts:
      - equal:
          path: spec.conversion
          value:
            strategy: Webhook
            webhook:
              conversionReviewVersions: [ "v1" ]
              clientConfig:
                service:
                  name: RELEASE-NAME-heimdall-conversion-v1beta1
                  namespace: NAMESPACE
                  path: "/convert"
                  port: 4459

  - it: should allow webhook customization for upgrades
    release:
      name: foo
      namespace: bar
      upgrade: true
    set:
      crds.updateEnabled: true
      webhooks:
        caBundle: foobar
      service.conversionWebhook.port: 1234
      providers.kubernetes.tls.key_store.path: /path/to/file.pem
    asserts:
      - equal:
          path: spec.conversion
          value:
            strategy: Webhook
            webhook:
              conversionReviewVersions: [ "v1" ]
              clientConfig:
                caBundle: foobar
                service:
                  name: foo-heimdall-conversion-v1beta1
                  namespace: bar
                  path: "/convert"
                  port: 1234

  - it: should contain only v1beta1 for first time installations, which has both, storage and served set to true
    asserts:
      - lengthEqual:
          path: spec.versions
          count: 1
      - equal:
          path: spec.versions[0].name
          value: v1beta1
      - equal:
          path: spec.versions[0].served
          value: true
      - equal:
          path: spec.versions[0].storage
          value: true

  - it: should contain two versions on upgrades - v1alpha4 and v1beta1 with expected flags configured by default
    release:
      upgrade: true
    set:
      crds.updateEnabled: true
    asserts:
      - lengthEqual:
          path: spec.versions
          count: 2
      - equal:
          path: spec.versions[0].name
          value: v1alpha4
      - equal:
          path: spec.versions[0].served
          value: true
      - equal:
          path: spec.versions[0].storage
          value: false
      - equal:
          path: spec.versions[0].deprecated
          value: true
      - equal:
          path: spec.versions[1].name
          value: v1beta1
      - equal:
          path: spec.versions[1].served
          value: true
      - equal:
          path: spec.versions[1].storage
          value: true
      - notExists:
          path: spec.versions[1].deprecated


  - it: should be able to configure v1alpha4 as storage version on upgrades
    release:
      upgrade: true
    set:
      crds.updateEnabled: true
      crds.storageVersion: v1alpha4
    asserts:
      - lengthEqual:
          path: spec.versions
          count: 2
      - equal:
          path: spec.versions[0].name
          value: v1alpha4
      - equal:
          path: spec.versions[0].served
          value: true
      - equal:
          path: spec.versions[0].storage
          value: true
      - equal:
          path: spec.versions[0].deprecated
          value: true
      - equal:
          path: spec.versions[1].name
          value: v1beta1
      - equal:
          path: spec.versions[1].served
          value: true
      - equal:
          path: spec.versions[1].storage
          value: false
      - notExists:
          path: spec.versions[1].deprecated