name: CI

on:
  push:
    branches:
      - main
      - release
  pull_request:
    branches:
      - main
      - release

env:
  GO_VERSION: "1.24.1"
  GOLANGCI_LINT_VERSION: "v2.0.2"
  HELM_VERSION: "3.16.4"
  KUBECONFORM_VERSION: "0.6.7"
  KUBERNETES_API_VERSION: "1.30.0"
  NODE_VERSION: "22.13"
  RUBY_VERSION: "3.4"
  COSIGN_VERSION: "v2.4.1"
  CYCLONEDX_GOMOD_VERSION: "v1.9.0"
  HUGO_VERSION: "0.140.1"
  DOCUMENTATION_URL: "https://dadrus.github.io/heimdall/"

permissions: read-all

jobs:
  check-changes:
    runs-on: ubuntu-24.04
    outputs:
      code_changed: ${{steps.code-changes.outputs.count > 0}}
      test_data_changed: ${{steps.test-data-changes.outputs.count > 0}}
      image_config_changed: ${{steps.image-config-changes.outputs.count > 0}}
      helm_chart_changed: ${{steps.helm-chart-changes.outputs.count > 0}}
      docs_changed: ${{steps.docs-changes.outputs.count > 0}}
      ci_config_changed: ${{steps.ci-changes.outputs.count > 0}}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Check code changes
        id: code-changes
        uses: technote-space/get-diff-action@f27caffdd0fb9b13f4fc191c016bb4e0632844af # v6.1.2
        with:
          PATTERNS: |
            *.go
            **/*.go
            schema/*.json
          FILES: |
            go.mod
            go.sum
      - name: Check test data changes
        id: test-data-changes
        uses: technote-space/get-diff-action@f27caffdd0fb9b13f4fc191c016bb4e0632844af # v6.1.2
        with:
          PATTERNS: |
            cmd/**/*.yaml
            internal/**/*.yaml
      - name: Check container image config changes
        id: image-config-changes
        uses: technote-space/get-diff-action@f27caffdd0fb9b13f4fc191c016bb4e0632844af # v6.1.2
        with:
          PATTERNS: |
            docker/Dockerfile
      - name: Check helm chart changes
        id: helm-chart-changes
        uses: technote-space/get-diff-action@f27caffdd0fb9b13f4fc191c016bb4e0632844af # v6.1.2
        with:
          PATTERNS: |
            charts/**
      - name: Check documentation changes
        id: docs-changes
        uses: technote-space/get-diff-action@f27caffdd0fb9b13f4fc191c016bb4e0632844af # v6.1.2
        with:
          PATTERNS: |
            docs/**
      - name: Check CI settings changes
        id: ci-changes
        uses: technote-space/get-diff-action@f27caffdd0fb9b13f4fc191c016bb4e0632844af # v6.1.2
        with:
          PATTERNS: |
            .github/workflows/*.yaml

  check-licenses:
    runs-on: ubuntu-24.04
    needs:
      - check-changes
    if: >
      needs.check-changes.outputs.code_changed == 'true' || 
      needs.check-changes.outputs.ci_config_changed == 'true'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "${{ env.GO_VERSION }}"
      - name: Get google/go-licenses package
        run: go install github.com/google/go-licenses@v1.6.0
      - name: Check the licenses
        run: go-licenses check --disallowed_types=forbidden,restricted,reciprocal,permissive,unknown .

  lint-code:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
    needs:
      - check-changes
    if: >
      needs.check-changes.outputs.code_changed == 'true' || 
      needs.check-changes.outputs.ci_config_changed == 'true'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Review code
        uses: reviewdog/action-golangci-lint@f9bba13753278f6a73b27a56a3ffb1bfda90ed71 # v2.8.0
        with:
          go_version: "${{ env.GO_VERSION }}"
          golangci_lint_version: "${{ env.GOLANGCI_LINT_VERSION }}"
          reporter: github-pr-review
          fail_level: error

  lint-api:
    runs-on: ubuntu-24.04
    needs:
      - check-changes
    if: > 
      needs.check-changes.outputs.docs_changed == 'true' || 
      needs.check-changes.outputs.ci_config_changed == 'true'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Node
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Redocly CLI
        run: npm i -g @redocly/cli@1.25.9
      - name: Run Redocly Lint
        run: redocly lint

  lint-dockerfiles:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
    needs:
      - check-changes
    if: > 
      needs.check-changes.outputs.image_config_changed == 'true' || 
      needs.check-changes.outputs.ci_config_changed == 'true'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Run hadolint
        uses: reviewdog/action-hadolint@fc7ee4a9f71e521bc43e370819247b70e5327540 # v1.50.2
        with:
          reporter: github-pr-review
          reviewdog_flags: -fail-level=error

  lint-helm-chart:
    runs-on: ubuntu-24.04
    needs:
      - check-changes
    if: > 
      needs.check-changes.outputs.helm_chart_changed == 'true' || 
      needs.check-changes.outputs.ci_config_changed == 'true'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup k8s tools
        uses: yokawasa/action-setup-kube-tools@9e25a4277af127b60011c95b6ed2da7e3b3613b1 # v0.11.2
        with:
          setup-tools: |
            helm
            kubeconform
          helm: '${{ env.HELM_VERSION }}'
          kubeconform: '${{ env.KUBECONFORM_VERSION }}'
      - name: Helm Lint
        run: helm lint ./charts/heimdall
      - name: Kubeconform decision mode deployment
        run: |
          helm template ./charts/heimdall > decision-config.yaml
          kubeconform --skip RuleSet -kubernetes-version ${{ env.KUBERNETES_API_VERSION }} decision-config.yaml
      - name: Kubeconform proxy mode deployment
        run: |
          helm template --set operationMode=proxy ./charts/heimdall > proxy-config.yaml
          kubeconform --skip RuleSet -kubernetes-version ${{ env.KUBERNETES_API_VERSION }} proxy-config.yaml

  unittest-helm-chart:
    runs-on: ubuntu-24.04
    needs:
      - check-changes
    if: >
      needs.check-changes.outputs.helm_chart_changed == 'true' || 
      needs.check-changes.outputs.ci_config_changed == 'true'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup k8s tools
        uses: yokawasa/action-setup-kube-tools@9e25a4277af127b60011c95b6ed2da7e3b3613b1 # v0.11.2
        with:
          setup-tools: |
            helm
            kubeconform
          helm: '${{ env.HELM_VERSION }}'
          kubeconform: '${{ env.KUBECONFORM_VERSION }}'
      - name: Install Helm Unittest
        run: helm plugin install --version v0.6.0 https://github.com/helm-unittest/helm-unittest.git
      - name: Run tests
        run: |
          helm unittest ./charts/heimdall

  test:
    runs-on: ubuntu-24.04
    needs:
      - check-changes
    if: >
      needs.check-changes.outputs.code_changed == 'true' || 
      needs.check-changes.outputs.test_data_changed == 'true' ||
      needs.check-changes.outputs.ci_config_changed == 'true'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "${{ env.GO_VERSION }}"
      - name: Test
        run: go test -v -coverprofile=coverage.cov -coverpkg=./... ./...
      - name: Code Coverage
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          files: coverage.cov
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  build-binaries:
    runs-on: ubuntu-24.04
    needs:
      - test
    if: needs.test.result == 'success'
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ amd64, arm64, arm ]
        exclude:
          - goarch: arm
            goos: darwin
          - goarch: arm
            goos: windows
          - goarch: arm64
            goos: windows
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "${{ env.GO_VERSION }}"
      - name: Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-buildid= -w -s -X github.com/dadrus/heimdall/version.Version=${{ github.sha }}" -o ./build/
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: github.ref == 'refs/heads/main'
        with:
          name: build-result-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./build/*
          retention-days: 30

  build-dev-container-images:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      id-token: write
    needs:
      - test
      - check-changes
    if: >
      needs.test.result == 'success' || (needs.test.result == 'skipped' && needs.check-changes.outputs.image_config_changed == 'true')
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install Cosign
        if: github.ref == 'refs/heads/main'
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1
        with:
          cosign-release: "${{ env.COSIGN_VERSION }}"
      - name: Set up Go # required as the sbom generator is compiled using go < 1.21
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "${{ env.GO_VERSION }}"
      - name: Generate SBOM
        if: github.ref == 'refs/heads/main'
        uses: CycloneDX/gh-gomod-generate-sbom@efc74245d6802c8cefd925620515442756c70d8f # v2.0.0
        with:
          version: "${{ env.CYCLONEDX_GOMOD_VERSION }}"
          args: app -licenses -assert-licenses -json -std -output CycloneDX-SBOM.json -main .
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Collect container meta-info for DockerHub
        if: github.ref == 'refs/heads/main'
        id: dockerhub-meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ github.repository }}
          labels: |
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.documentation=${{ env.DOCUMENTATION_URL }}
      - name: Collect container meta-info for GHCR
        if: github.ref == 'refs/heads/main'
        id: ghcr-meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ghcr.io/${{ github.repository }}
          labels: |
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.documentation=${{ env.DOCUMENTATION_URL }}
      - name: Build images
        if: github.ref != 'refs/heads/main'
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          push: false
          build-args: VERSION=${{ github.sha }}
          tags: ${{ github.repository }}:local
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push dev image to DockerHub
        if: github.ref == 'refs/heads/main'
        id: dockerhub-image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          build-args: VERSION=${{ github.sha }}
          labels: ${{ steps.dockerhub-meta.outputs.labels }}
          tags: |
            ${{ github.repository }}:dev
            ${{ github.repository }}:dev-${{ github.sha }}
      - name: Build and push dev image to GHCR
        if: github.ref == 'refs/heads/main'
        id: ghcr-image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          build-args: VERSION=${{ github.sha }}
          labels: ${{ steps.ghcr-meta.outputs.labels }}
          tags: |
            ghcr.io/${{ github.repository }}:dev
            ghcr.io/${{ github.repository }}:dev-${{ github.sha }}
      - name: Sign the image published in DockerHub
        if: steps.dockerhub-image.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_REPOSITORY: ${{ github.repository }}-signatures
        run: cosign sign --yes ${{ github.repository }}@${{ steps.dockerhub-image.outputs.digest }}
      - name: Attest and attach SBOM to the image published in DockerHub
        if: steps.dockerhub-image.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_REPOSITORY: ${{ github.repository }}-sbom
        run: cosign attest --yes --predicate CycloneDX-SBOM.json --type cyclonedx ${{ github.repository }}@${{ steps.dockerhub-image.outputs.digest }}
      - name: Sign the image published in GitHub
        if: steps.ghcr-image.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_REPOSITORY: ghcr.io/${{ github.repository }}-signatures
        run: cosign sign --yes ghcr.io/${{ github.repository }}@${{ steps.ghcr-image.outputs.digest }}
      - name: Attest and attach SBOM to the image published in GitHub
        if: steps.ghcr-image.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_REPOSITORY: ghcr.io/${{ github.repository }}-sbom
        run: cosign attest --yes --predicate CycloneDX-SBOM.json --type cyclonedx ghcr.io/${{ github.repository }}@${{ steps.ghcr-image.outputs.digest }}

  build-dev-documentation:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    needs:
      - check-changes
    if: >
      needs.check-changes.outputs.docs_changed == 'true' || needs.check-changes.outputs.ci_config_changed == 'true'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@75d2e84710de30f6ff7268e08f310b60ef14033f # v3.0.0
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true
      - name: Setup Node
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup ruby
        uses: ruby/setup-ruby@7886c6653556e1164c58a7603d88286b5f708293 # v1.228.0
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install asciidoctor
        run: gem install asciidoctor asciidoctor-diagram asciidoctor-html5s rouge
      - name: Install dependencies
        working-directory: ./docs
        run: npm install
      - name: Update version string to dev version
        uses: jacobtomlinson/gha-find-replace@2ff30f644d2e0078fc028beb9193f5ff0dcad39e # v3
        with:
          find: "x-current-version"
          replace: "dev"
          regex: false
          include: docs/**
      - name: Build documentation
        working-directory: ./docs
        run: hugo --minify -d ./public
      - name: Deploy documentation
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/public
          destination_dir: dev
