<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Heimdall - a cloud native Identity Aware Proxy and Access Control Decision service on Heimdall</title><link>https://dadrus.github.io/</link><description>Recent content in Heimdall - a cloud native Identity Aware Proxy and Access Control Decision service on Heimdall</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 11 Aug 2025 20:52:18 +0000</lastBuildDate><atom:link href="https://dadrus.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Discover heimdall</title><link>https://dadrus.github.io/docs/getting_started/discover_heimdall/</link><pubDate>Wed, 29 Nov 2023 22:03:28 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/discover_heimdall/</guid><description>&lt;div class="sect1">
&lt;h2 id="_what_is_heimdall">What is heimdall?&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Heimdall is a cloud native identity aware proxy and access control decision service inspired by the Zero Trust idea. It brings together authentication and authorization systems and can be thought of as an orchestrator for these in front of your services, allowing you to completely retain control without the need for any type of maintenance in your own code.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>You can use it, in one of the following modes:&lt;/p>
&lt;/div></description></item><item><title>Install heimdall</title><link>https://dadrus.github.io/docs/getting_started/installation/</link><pubDate>Mon, 25 Jul 2022 18:22:50 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/installation/</guid><description>&lt;div class="sect1">
&lt;h2 id="_source_code">Source Code&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>You can always build a copy of heimdall by following the following instructions for your OS/environment.&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_prerequisites">Prerequisites&lt;/h3>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://git-scm.com/">git&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;a href="https://go.dev/dl/">Go&lt;/a> programming language &amp;gt;= 1.24&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_download">Download&lt;/h3>
&lt;div class="paragraph">
&lt;p>Retrieve the latest copy of heimdall source code by cloning the git repository&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight">&lt;code data-lang="bash">&lt;span class="nv">$ &lt;/span>git clone git@github.com:dadrus/heimdall.git&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_build_with_go">Build with go&lt;/h3>
&lt;div class="paragraph">
&lt;p>Build using a single line with &lt;code>go build&lt;/code>&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight">&lt;code data-lang="bash">&lt;span class="nv">$ CGO_ENABLED&lt;/span>&lt;span class="o">=&lt;/span>0 go build &lt;span class="nt">-trimpath&lt;/span> &lt;span class="nt">-ldflags&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;-buildid= -w -s -X github.com/dadrus/heimdall/version.Version==my-custom-build&amp;#34;&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>The flags are set by intention. Using &lt;code>-trimpath&lt;/code> and &lt;code>-buildid=&lt;/code> as part of the &lt;code>-ldflags&lt;/code> argument ensures the build is reproducible (See also &lt;a href="https://reproducible-builds.org/">Reproducible Builds&lt;/a>). Other flags remove unused symbols and debug information.&lt;/p>
&lt;/div></description></item><item><title>Protect an Application</title><link>https://dadrus.github.io/docs/getting_started/protect_an_app/</link><pubDate>Mon, 04 Mar 2024 08:54:47 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/protect_an_app/</guid><description>&lt;div class="sect1">
&lt;h2 id="_overview">Overview&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>In this guide, we’ll configure two setups to protect a service that exposes a few endpoints:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>The &lt;code>/public&lt;/code> endpoint is, as the name implies, public. Every request to it should be forwarded as is.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;code>/user&lt;/code> endpoint should only be accessible to users with the &lt;code>user&lt;/code> role.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;code>/admin&lt;/code> endpoint should only be accessible to users with the &lt;code>admin&lt;/code> role.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The &lt;code>/private&lt;/code> endpoint, along with any other potentially exposed endpoints, should not be accessible at all. All requests to it should be rejected.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Caddy Integration</title><link>https://dadrus.github.io/guides/proxies/caddy/</link><pubDate>Mon, 17 Feb 2025 10:43:16 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/caddy/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://caddyserver.com">Caddy&lt;/a> is a modern web server and reverse proxy known for its automatic HTTPS and simplicity. Heimdall can be integrated with Caddy using the &lt;a href="https://caddyserver.com/docs/caddyfile/directives/forward_auth">forward_auth&lt;/a> directive. If heimdall responds with a 2XX status code, Caddy grants access and forwards the original request to the upstream service. Otherwise, the response from heimdall is returned to the client.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_prerequisites">Prerequisites&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Integration with Caddy requires heimdall being operated in &lt;a href="./docs/concepts/operating_modes/#_decision_mode">Decision Operation Mode&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_configuration_options">Configuration Options&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Since Caddy offers extensive configuration options and heimdall supports multiple integration methods, you can choose any of the examples below. Each setup ensures heimdall can construct the URL of the protected backend server for rule matching purposes.&lt;/p>
&lt;/div></description></item><item><title>Pipelines</title><link>https://dadrus.github.io/docs/concepts/pipelines/</link><pubDate>Tue, 29 Nov 2022 22:29:36 +0200</pubDate><guid>https://dadrus.github.io/docs/concepts/pipelines/</guid><description>&lt;div class="sect1">
&lt;h2 id="_overview">Overview&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Pipelines are specified in &lt;a href="./docs/concepts/rules/">rules&lt;/a> and are used to authenticate and authorize the particular requests, as well as to handle encountered errors.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>As described in the &lt;a href="./docs/getting_started/discover_heimdall/">Discover heimdall&lt;/a> chapter and also shown in the diagram below, central aspects of heimdall are upstream specific pipelines, which allow you orchestrating different services to authenticate, enrich and authorize incoming HTTP requests, transform the resulting subject information into a format, or obtain credentials required for the communication with the particular upstream services.&lt;/p>
&lt;/div></description></item><item><title>Contour Integration</title><link>https://dadrus.github.io/guides/proxies/contour/</link><pubDate>Wed, 02 Aug 2023 17:10:52 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/contour/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://projectcontour.io/">Contour&lt;/a> is an ingress controller for Kubernetes, implementing a control plane for &lt;a href="https://www.envoyproxy.io/">Envoy&lt;/a> edge and a service proxy.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_prerequisites">Prerequisites&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Integration with Contour requires heimdall being operated in &lt;a href="./docs/concepts/operating_modes/#_decision_mode">Decision Operation Mode&lt;/a> exposing Envoy’s external authorization &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/auth/v3/external_auth.proto">GRPC protocol&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Being security first ingress controller, Contour enforces TLS for communication between Envoy and any external authorization service. For that reason, heimdall must be configured with an appropriate key material and certificate. Same is actually also true for the http route definition of the actual upstream service. The only exception is when configuring Contour using heimdall as a global external auth service.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Mechanisms</title><link>https://dadrus.github.io/docs/concepts/mechanisms/</link><pubDate>Tue, 29 Nov 2022 22:31:36 +0200</pubDate><guid>https://dadrus.github.io/docs/concepts/mechanisms/</guid><description>&lt;div class="sect1">
&lt;h2 id="_mechanism_categories">Mechanism Categories&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>All supported mechanisms fall into the following five categories, each implementing different mechanisms types (addressing different protocols or scenarios):&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="./docs/mechanisms/authenticators/">Authenticators&lt;/a>, which inspect HTTP requests for presence of authentication objects, like e.g. the presence of a specific cookie. If such objects exist, authenticators verify the related authentication status and obtain information about the corresponding subject. A subject, could be a user who tries to use particular functionality of the upstream service, a machine (if you have machine-2-machine interaction), or something different. Authenticators ensure the subject is authenticated and the information available about it is valid.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="./docs/mechanisms/authorizers/">Authorizers&lt;/a>, which ensure that the subject obtained via an authenticator has the required permissions to submit the given HTTP request and thus to execute the corresponding logic in the upstream service. E.g. a specific endpoint of the upstream service might only be accessible to a &amp;#34;user&amp;#34; from the &amp;#34;admin&amp;#34; group, or to an HTTP request if a specific HTTP header is set.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="./docs/mechanisms/contextualizers/">Contextualizers&lt;/a>, which enrich the information about the subject obtained via an authenticator with further contextual information, required either by the upstream service itself or an authorizer. This can be handy if the actual authentication system doesn’t have all information about the subject (which is usually the case in microservice architectures), or if dynamic information about the subject, like the current location based on the IP address, is required.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="./docs/mechanisms/finalizers/">Finalizers&lt;/a>, which, as the name implies, finalize the execution of the pipeline and enrich the request with data such as subject information or authentication tokens required by the upstream service. The available options range from doing nothing, adding a simple header over a structured JWT, to driving specific protocols, e.g. to obtain a token required by the upstream service.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="./docs/mechanisms/error_handlers/">Error Handlers&lt;/a>, which are responsible for execution of logic if any of the mechanisms described above fail. These range from a simple error response to the client, which sent the request, to sophisticated ones, supporting complex logic and redirects.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Emissary Ingress Integration</title><link>https://dadrus.github.io/guides/proxies/emissary/</link><pubDate>Mon, 21 Aug 2023 15:23:41 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/emissary/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://www.getambassador.io/products/api-gateway">Emissary-Ingress&lt;/a> is an Envoy-powered open source, high performance ingress controller and API Gateway for Kubernetes from &lt;a href="https://www.getambassador.io/">Ambassador Labs&lt;/a>. Integration happens by letting Emissary-Ingress delegating authentication and authorization to heimdall. If heimdall answers with a 2XX code, the ingress controller will grant access and forwards the original request to the upstream service. Otherwise, the response from heimdall is returned to the client.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_prerequisites">Prerequisites&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Integration with Emissary-Ingress requires heimdall being operated in &lt;a href="./docs/concepts/operating_modes/#_decision_mode">Decision Operation Mode&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Rules</title><link>https://dadrus.github.io/docs/concepts/rules/</link><pubDate>Tue, 29 Nov 2022 22:33:36 +0200</pubDate><guid>https://dadrus.github.io/docs/concepts/rules/</guid><description>&lt;div class="paragraph">
&lt;p>You can compare the relation between mechanisms and rules to a relation between a catalogue at a car dealer and a real car, when you get it. So, mechanisms is what you can see and select in a catalogue (though, in case of heimdall you have to define that catalogue first) to compile your car and the rule is your car with real components and behavior. In that sense when you define a rule, you specify which mechanisms should it be built from and whether you would like some &amp;#34;tuning&amp;#34; to be applied to better suit your needs.&lt;/p>
&lt;/div></description></item><item><title>Envoy Integration</title><link>https://dadrus.github.io/guides/proxies/envoy/</link><pubDate>Sun, 18 Dec 2022 00:13:59 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/envoy/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://www.envoyproxy.io/">Envoy&lt;/a> is a high performance distributed proxy designed for single services and applications, as well as a communication bus and “universal data plane” designed for large microservice “service mesh” architectures.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_prerequisites">Prerequisites&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Integration with Envoy proxy requires heimdall being operated in &lt;a href="./docs/concepts/operating_modes/#_decision_mode">Decision Operation Mode&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_integration_options">Integration Options&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Envoy makes integration with external authorization services, like heimdall possible via an &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/ext_authz/v3/ext_authz.proto.html">External Authorization&lt;/a> filter in two ways&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>either via HTTP&lt;/p>
&lt;/li>
&lt;li>
&lt;p>or via GRPC&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>In both cases, the filter calls an external gRPC or HTTP service to check whether an incoming HTTP request is authorized or not. If the request is deemed unauthorized, then the request will be denied normally with 403 (Forbidden) response.&lt;/p>
&lt;/div></description></item><item><title>Rule Provider</title><link>https://dadrus.github.io/docs/concepts/provider/</link><pubDate>Tue, 29 Nov 2022 22:31:36 +0200</pubDate><guid>https://dadrus.github.io/docs/concepts/provider/</guid><description>&lt;div class="sect1">
&lt;h2 id="_rules_sets">Rules Sets&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Regular, or &lt;a href="./docs/rules/regular_rule/">upstream-specific rules&lt;/a> must be organized, versioned, and loaded in a structured way. This structure is provided by so-called rule sets.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>A rule set is essentially a container for a list of rules, along with metadata such as its name and version. The actual format is provider-specific and depends on the rule provider in use — for example, rule sets may be defined in files, Kubernetes custom resources, or received via an API.&lt;/p>
&lt;/div></description></item><item><title>Envoy Gateway Integration</title><link>https://dadrus.github.io/guides/proxies/envoy_gateway/</link><pubDate>Thu, 02 May 2024 13:02:43 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/envoy_gateway/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://gateway.envoyproxy.io">Envoy Gateway&lt;/a> is an open source project for managing &lt;a href="https://www.envoyproxy.io/">Envoy Proxy&lt;/a> as a Kubernetes-based application gateway by making use of the &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> resources.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_prerequisites">Prerequisites&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>A kubernetes cluster&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deployed Envoy Gateway (See &lt;a href="https://gateway.envoyproxy.io/v1.0.1/install/">here&lt;/a> for installation options)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deployed &lt;a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.GatewayClass">&lt;code>GatewayClass&lt;/code>&lt;/a> resource that matches Envoy Gateway’s configured &lt;code>controllerName&lt;/code> (typically &lt;code>gateway.envoyproxy.io/gatewayclass-controller&lt;/code>), as well as a deployed &lt;a href="https://gateway-api.sigs.k8s.io/api-types/gateway">&lt;code>Gateway&lt;/code>&lt;/a> resource.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>heimdall installed and operated in &lt;a href="./docs/concepts/operating_modes/#_decision_mode">Decision Operation Mode&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_integration_options">Integration Options&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Technically, the integration happens the same way as with &lt;a href="./guides/proxies/envoy/">Envoy&lt;/a> itself by making use of the &lt;a href="https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/ext_authz/v3/ext_authz.proto.html">External Authorization&lt;/a> filter, and can be done in two ways:&lt;/p>
&lt;/div></description></item><item><title>Operating Modes</title><link>https://dadrus.github.io/docs/concepts/operating_modes/</link><pubDate>Tue, 29 Nov 2022 22:29:36 +0200</pubDate><guid>https://dadrus.github.io/docs/concepts/operating_modes/</guid><description>&lt;div class="sect1">
&lt;h2 id="_decision_mode">Decision Mode&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>In this mode you can integrate heimdall with existing reverse proxies, or API gateways (like &lt;a href="https://konghq.com/">Kong&lt;/a>, &lt;a href="https://nginx.org">NGNIX&lt;/a>, &lt;a href="https://www.envoyproxy.io/">Envoy&lt;/a>, &lt;a href="https://traefik.io/">Traefik&lt;/a> and much more)&lt;/p>
&lt;/div>
&lt;div id="_fig_heimdall_decision_deployment" class="imageblock">
&lt;div class="content">
&lt;img src="diag-ditaa-md5-6aa79a33899aaf938fd0bdc4e82460e2.svg" alt="Diagram" width="1020" height="490"/>
&lt;/div>
&lt;div class="title">Figure 1. Decision Deployment&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>In this mode heimdall can be integrated with most probably all modern API gateways and reverse proxies as a so-called &amp;#34;authentication middleware&amp;#34;. Here the reverse proxy, respectively API gateway integrating with heimdall, will forward requests to heimdall by making use of its main service endpoint for authentication and authorization purposes. As in the &lt;a href="#_proxy_mode">Reverse Proxy&lt;/a> mode, heimdall will check if these requests match and satisfy the conditions defined in the available rules. If not, heimdall returns an error to its client (here API gateway/reverse proxy). If the rule execution was successful, it also responds to the API gateway/reverse proxy with &lt;code>200 OK&lt;/code> (can be overridden if required) and sets headers/cookies, specified in the matched rule, which are then forwarded to the upstream service.&lt;/p>
&lt;/div></description></item><item><title>HAProxy Integration</title><link>https://dadrus.github.io/guides/proxies/haproxy/</link><pubDate>Tue, 08 Aug 2023 07:32:14 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/haproxy/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://www.haproxy.com/">HAProxy&lt;/a> (High Availability Proxy) is a popular open source, fast, and reliable solution providing load balancer and reverse proxy features for TCP- and HTTP-based applications, capable handling heavy load traffic and rerouting requests seamlessly across multiple workloads (e.g. web, application, database).&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_vanilla_haproxy">Vanilla HAProxy&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>HAProxy is highly extensible thanks to Lua scripting support. For that reason the vanilla HAProxy does not implement any means of external authorization support and requires custom Lua code to achieve integration with heimdall.&lt;/p>
&lt;/div></description></item><item><title>Istio Service Mesh Integration</title><link>https://dadrus.github.io/guides/proxies/istio/</link><pubDate>Wed, 23 Oct 2024 20:49:17 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/istio/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://istio.io/">Istio&lt;/a> is an open-source service mesh that extends Kubernetes’ capabilities, providing a uniform way to observe, secure, and connect microservices. It also functions as a Kubernetes-based application gateway, using either its built-in &lt;a href="https://istio.io/latest/docs/concepts/traffic-management/#gateways">Ingress Gateway&lt;/a>, the Kubernetes &lt;a href="https://istio.io/latest/docs/tasks/traffic-management/ingress/kubernetes-ingress/">Ingress&lt;/a>, or the &lt;a href="https://gateway-api.sigs.k8s.io/">Gateway API&lt;/a> resources for configuration.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_prerequisites">Prerequisites&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>A kubernetes cluster&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deployed Istio (See &lt;a href="https://istio.io/latest/docs/setup/install/">here&lt;/a> for installation options)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>heimdall installed and operated in &lt;a href="./docs/concepts/operating_modes/#_decision_mode">Decision Operation Mode&lt;/a>.&lt;/p>
&lt;div class="admonitionblock note">
&lt;table>
&lt;tbody>&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-note" title="Note">&lt;/i>
&lt;/td>
&lt;td class="content">
To allow heimdall communicating with services running in the mesh, add the certificate of the CA used by Istio to heimdall’s &lt;a href="./docs/operations/security/#_trust_store">trust store&lt;/a>.
&lt;/td>
&lt;/tr>
&lt;/tbody>&lt;/table>
&lt;/div></description></item><item><title>NGINX Integration</title><link>https://dadrus.github.io/guides/proxies/nginx/</link><pubDate>Fri, 29 Jul 2022 00:14:49 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/nginx/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://nginx.org/">NGINX&lt;/a> is an HTTP and reverse proxy server which became famous as one of the fastest web servers out there, heimdall can be integrated with by making use of the &lt;a href="https://nginx.org/en/docs/http/ngx_http_auth_request_module.html">ngx_http_auth_request_module&lt;/a>. In such setup, NGINX delegates authentication and authorization to heimdall. If heimdall answers with a 2XX code, NGINX grants access and forwards the original request to the upstream service. If heimdall returns 401 or 403, the access is denied with the corresponding error code. Any other response code returned by heimdall is considered an error.&lt;/p>
&lt;/div></description></item><item><title>Traefik Proxy Integration</title><link>https://dadrus.github.io/guides/proxies/traefik/</link><pubDate>Thu, 09 Jun 2022 18:59:49 +0200</pubDate><guid>https://dadrus.github.io/guides/proxies/traefik/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://doc.traefik.io/traefik/">Traefik Proxy&lt;/a> is a modern HTTP proxy and load balancer for microservices, heimdall can be integrated with via the &lt;a href="https://doc.traefik.io/traefik/middlewares/http/forwardauth/">ForwardAuth Middleware&lt;/a>. If heimdall answers with a 2XX code, traefik grants access and forwards the original request to the upstream service. Otherwise, the response from heimdall is returned to the client.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_prerequisites">Prerequisites&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Integration with traefik requires heimdall being operated in &lt;a href="./docs/concepts/operating_modes/#_decision_mode">Decision Operation Mode&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="admonitionblock caution">
&lt;table>
&lt;tbody>&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-caution" title="Caution">&lt;/i>
&lt;/td>
&lt;td class="content">
&lt;div class="paragraph">
&lt;p>Traefik makes use of &lt;code>X-Forwarded-*&lt;/code> HTTP headers to forward the HTTP method, protocol, host, etc. to the ForwardAuth middleware. By default, heimdall does not trust those. To allow heimdall making use of such headers, you must configure &lt;a href="./docs/services/main/#_trusted_proxies">trusted proxies&lt;/a> in heimdall’s main service configuration to contain the IPs or networks of your traefik instances. For test purposes, you can set it to &amp;#34;0.0.0.0/0&amp;#34;, which would basically disable the check and let heimdall trust requests from any source.&lt;/p>
&lt;/div></description></item><item><title>Integration with OPA</title><link>https://dadrus.github.io/guides/authz/opa/</link><pubDate>Fri, 04 Nov 2022 09:00:41 +0200</pubDate><guid>https://dadrus.github.io/guides/authz/opa/</guid><description>&lt;div class="paragraph">
&lt;p>The &lt;a href="./docs/getting_started/protect_an_app/">Protect an Application&lt;/a> quickstart guide, describing the steps required to protect an application with heimdall, shows already how &lt;a href="https://www.openpolicyagent.org/">OPA&lt;/a> can be used with heimdall. This document provides some further examples.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_example_1_sharing_service">Example 1: Sharing Service&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Imagine you have a sharing service, e.g. to let friends share all their photos with each other and the API looks roughly as follows:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;code>GET /&amp;lt;user&amp;gt;/photos&lt;/code> returns all the photos of the user either to the owner of the photo collection itself or to its friends.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Integration with OpenFGA</title><link>https://dadrus.github.io/guides/authz/openfga/</link><pubDate>Mon, 25 Mar 2024 12:32:07 +0200</pubDate><guid>https://dadrus.github.io/guides/authz/openfga/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://openfga.dev">OpenFGA&lt;/a> is inspired by &lt;a href="https://zanzibar.academy/">Google’s Zanzibar&lt;/a>, Google’s Relationship Based Access Control system and allows easily implementing authorization for any kind of application relying on Role-Based Access Control with additional Attribute-Based Access Control capabilities.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>This guide is based on the OpenFGA’s official &lt;a href="https://openfga.dev/docs/getting-started">Getting Started&lt;/a> guide and highlights the relevant differences. It mimics a RESTful document management API, allowing listing, creating, reading, updating, and deleting documents. The API consists of two endpoints:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;code>/document/&amp;lt;id&amp;gt;&lt;/code> with &lt;code>id&lt;/code> being the id of the document and the HTTP verbs reflecting the actual operations. E.g. a &lt;code>GET /document/1234&lt;/code> request should read the document with the id &lt;code>1234&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>/documents&lt;/code> which supports the HTTP &lt;code>GET&lt;/code> verb only and allows the user to list the documents it can access.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>First-Party Authentication with OpenID Connect</title><link>https://dadrus.github.io/guides/authn/oidc_first_party_auth/</link><pubDate>Fri, 04 Nov 2022 09:00:41 +0200</pubDate><guid>https://dadrus.github.io/guides/authn/oidc_first_party_auth/</guid><description>&lt;div class="paragraph">
&lt;p>By the end of this guide, you’ll have a functional setup where heimdall uses &lt;a href="https://www.keycloak.org/">Keycloak&lt;/a> to authenticate users and route requests based on their authentication status and roles for role-based access control.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Although this guide uses Keycloak as identity provider (IDP), you can achieve the same results with &lt;a href="https://zitadel.com">Zitadel&lt;/a>, &lt;a href="https://github.com/malach-it/boruta-server">Boruta&lt;/a>, or any other OpenID Connect compatible IDP.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_overview">Overview&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>In this guide, we’ll set up a Docker Compose environment where heimdall secures services and controls access for specific endpoints:&lt;/p>
&lt;/div></description></item><item><title>Configuration</title><link>https://dadrus.github.io/docs/operations/configuration/</link><pubDate>Fri, 08 Jul 2022 09:16:36 +0200</pubDate><guid>https://dadrus.github.io/docs/operations/configuration/</guid><description>&lt;div class="paragraph">
&lt;p>In heimdall, configuration encompasses two distinct concepts:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Static startup configuration, which is the focus of this document, and&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configuration of rules and rule sets, detailed &lt;a href="./docs/rules/rule_sets/">here&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>The static configuration establishes core services and components, such as the &lt;a href="./docs/services/main/">main service&lt;/a> - the primary entry point heimdall listens to for access control decisions - along with observability features like &lt;a href="./docs/operations/observability/#_logging">logging&lt;/a>, the &lt;a href="./docs/concepts/mechanisms/">mechanism catalogue&lt;/a>, the &lt;a href="./docs/rules/default_rule/">default rule&lt;/a>, and &lt;a href="./docs/rules/providers/">rule providers&lt;/a>. These elements are designed to remain relatively stable over time.&lt;/p>
&lt;/div></description></item><item><title>CLI</title><link>https://dadrus.github.io/docs/operations/cli/</link><pubDate>Thu, 09 Jun 2022 18:57:50 +0200</pubDate><guid>https://dadrus.github.io/docs/operations/cli/</guid><description>&lt;div class="sect1">
&lt;h2 id="_usage_patterns">Usage Patterns&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight">&lt;code data-lang="bash">heimdall &lt;span class="o">[&lt;/span>&lt;span class="nb">command&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>flags] &lt;span class="o">[&lt;/span>arguments]&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Use &lt;code>heimdall help&lt;/code> to get overview about available commands, respectively &lt;code>heimdall [command] help&lt;/code> for help on any command.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Flag’s usage:&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight">&lt;code data-lang="bash">&lt;span class="c"># set flag_argument to flag(s)&lt;/span>
heimdall &lt;span class="o">[&lt;/span>&lt;span class="nt">--flag&lt;/span>&lt;span class="o">=&lt;/span>flag_argument] &lt;span class="o">[&lt;/span>&lt;span class="nt">-f&lt;/span> &lt;span class="o">[&lt;/span>flag_argument]]&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>E.g.&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight">&lt;code data-lang="bash">heimdall validate config &lt;span class="nt">-c&lt;/span> config.yaml&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_commands">Commands&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;code>completion&lt;/code>&lt;/p>
&lt;div class="paragraph">
&lt;p>Generates the autocompletion script for the specified shell.&lt;/p>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;code>health&lt;/code>&lt;/p>
&lt;div class="paragraph">
&lt;p>Calls heimdall’s healthcheck endpoint to verify the status of the deployment.&lt;/p>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;code>help&lt;/code>&lt;/p>
&lt;div class="paragraph">
&lt;p>Provides an overview about the available commands and their descriptions.&lt;/p>
&lt;/div></description></item><item><title>Observability</title><link>https://dadrus.github.io/docs/operations/observability/</link><pubDate>Wed, 03 Aug 2022 18:53:31 +0200</pubDate><guid>https://dadrus.github.io/docs/operations/observability/</guid><description>&lt;div class="sect1">
&lt;h2 id="_logging">Logging&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Heimdall’s implementation uses &lt;a href="https://github.com/rs/zerolog">zerolog&lt;/a> - Zero Allocation JSON Logger, which can however also log in plain text. All emitted log statements include information related to distributed tracing (if tracing is enabled) so that not only log statements can be correlated to traces, but also all log statements belonging to single request/transaction can be correlated as well.&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_configuration">Configuration&lt;/h3>
&lt;div class="paragraph">
&lt;p>Logging configuration can be adjusted in the &lt;code>log&lt;/code> property of heimdall’s configuration and supports following properties.&lt;/p>
&lt;/div></description></item><item><title>Caching</title><link>https://dadrus.github.io/docs/operations/cache/</link><pubDate>Mon, 06 Nov 2023 13:16:34 +0100</pubDate><guid>https://dadrus.github.io/docs/operations/cache/</guid><description>&lt;div class="paragraph">
&lt;p>Even some default caching is in place, and you can instruct heimdall to cache particular data for some amount of time, like e.g how long to cache the response from the JWKS endpoint when using the &lt;a href="./docs/mechanisms/authenticators/#_jwt">JWT Authenticator&lt;/a>, all these options require a caching backend to be available. Otherwise, the corresponding configurations do not have any effect.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Configuration of that backend happens by making use of the &lt;code>cache&lt;/code> property in heimdall’s configuration, which supports the following options:&lt;/p>
&lt;/div></description></item><item><title>Security</title><link>https://dadrus.github.io/docs/operations/security/</link><pubDate>Mon, 15 Aug 2022 08:33:35 +0200</pubDate><guid>https://dadrus.github.io/docs/operations/security/</guid><description>&lt;div class="sect1">
&lt;h2 id="_defaults">Defaults&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>The following configurations and behaviors are enforced by default:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>All inbound communication must use TLS. TLS configuration is required for all services and endpoints exposed by heimdall. This enforcement can be disabled (not recommended) by starting Heimdall with the &lt;code>--insecure-skip-ingress-tls-enforcement&lt;/code> flag.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>All outbound communication must use TLS. TLS configuration is required for all services and endpoints heimdall communicates with. This enforcement can be disabled (not recommended) by starting Heimdall with the &lt;code>--insecure-skip-egress-tls-enforcement&lt;/code> flag.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If heimdall is used in &lt;a href="./docs/concepts/operating_modes/#_proxy_mode">proxy mode&lt;/a>, communication with upstream services while proxying requests must use TLS. This enforcement can be disabled (not recommended) by starting heimdall with the &lt;code>--insecure-skip-upstream-tls-enforcement&lt;/code> flag.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If heimdall is operated as part of e.g. a service mesh, that handles secure communication between the services, you may choose to disable TLS enforcement. This can be done by using the individual flags mentioned above or, alternatively, by using the &lt;code>--insecure-skip-all-tls-enforcement&lt;/code> flag, which enables all the above options at once.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configuring the &lt;a href="./docs/services/main/#_trusted_proxies">&lt;code>trusted_proxies&lt;/code>&lt;/a> property to allow insecure networks (&lt;code>0.0.0.0/0&lt;/code>, &lt;code>0/0&lt;/code>, &lt;code>0000:0000:0000:0000:0000:0000:0000:0000/0&lt;/code>, and &lt;code>::/0&lt;/code>) is prohibited. See also &lt;a href="./docs/operations/security/#_http_header_security_considerations">HTTP Header Security Considerations&lt;/a>. This enforcement can be disabled (not recommended) by starting heimdall with the &lt;code>--insecure-skip-secure-trusted-proxies-enforcement&lt;/code> flag.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The authentication stage of the &lt;a href="./docs/rules/default_rule/">default rule&lt;/a> cannot start with an insecure authenticator (i.e., authenticators that allow all requests to pass through). This enforcement can be disabled (not recommended) by starting heimdall with the &lt;code>--insecure-skip-secure-default-rule-enforcement&lt;/code> flag.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Main Service</title><link>https://dadrus.github.io/docs/services/main/</link><pubDate>Thu, 09 Jun 2022 18:55:45 +0200</pubDate><guid>https://dadrus.github.io/docs/services/main/</guid><description>&lt;div class="paragraph">
&lt;p>To make use of this service you have to start heimdall with either &lt;code>heimdall serve proxy&lt;/code> or &lt;code>heimdall serve decision&lt;/code>. By default, heimdall listens on &lt;code>0.0.0.0:4456&lt;/code> endpoint for incoming requests and also configures useful defaults. You can, and should however adjust the configuration for your needs.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_configuration">Configuration&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>The configuration of this service can be adjusted in the &lt;code>serve&lt;/code> property, which lives on the top level of heimdall’s configuration and supports the following properties.&lt;/p>
&lt;/div></description></item><item><title>Management Service</title><link>https://dadrus.github.io/docs/services/management/</link><pubDate>Thu, 09 Jun 2022 18:55:36 +0200</pubDate><guid>https://dadrus.github.io/docs/services/management/</guid><description>&lt;div class="paragraph">
&lt;p>By default, heimdall listens on &lt;code>0.0.0.0:4457&lt;/code> for incoming requests and applies useful default timeouts and buffer limits. No additional options are configured by default, but you can adjust them as needed.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>This service exposes the health and JWKS endpoints.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_configuration">Configuration&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>The configuration of the management endpoint is defined under the &lt;code>management&lt;/code> property. It supports the following properties.&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;strong>&lt;code>host&lt;/code>&lt;/strong>: &lt;em>string&lt;/em> (optional)&lt;/p>
&lt;div class="paragraph">
&lt;p>Use this property to specify the TCP/IP address on which heimdall should listen for incoming connections. E.g. the entry &lt;code>0.0.0.0&lt;/code> allows listening on all network interfaces for IPv4 and is the default setting.&lt;/p>
&lt;/div></description></item><item><title>Catalogue</title><link>https://dadrus.github.io/docs/mechanisms/catalogue/</link><pubDate>Thu, 11 Jan 2024 15:01:21 +0200</pubDate><guid>https://dadrus.github.io/docs/mechanisms/catalogue/</guid><description>&lt;div class="paragraph">
&lt;p>As described in &lt;a href="./docs/concepts/mechanisms/">Concepts&lt;/a> section, mechanisms must be defined and configured before these can be used in rules. That is happening in the so-called mechanisms catalogue. On start up heimdall instantiates all defined and configured mechanisms and makes these available for usage in rules.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_catalogue_configuration">Catalogue Configuration&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>The corresponding mechanisms catalogue resides under the &lt;code>mechanisms&lt;/code> property of heimdall static configuration and is organized based on mechanism categories as also shown in the snippet below.&lt;/p>
&lt;/div></description></item><item><title>Objects, Templating &amp; Co</title><link>https://dadrus.github.io/docs/mechanisms/evaluation_objects/</link><pubDate>Wed, 10 Jan 2024 15:53:47 +0200</pubDate><guid>https://dadrus.github.io/docs/mechanisms/evaluation_objects/</guid><description>&lt;div class="paragraph">
&lt;p>E.g. in one case, you want to have access to a particular request header. In another case you would like to add specific data to the resulting JWT created by heimdall. And in yet another case, you may want to check whether some expectations apply. These capabilities are described on this page.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_objects">Objects&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Objects represent state in the execution of a particular rule. These are the entities, either created or used by particular mechanisms and can represent things, like the actual request, the authenticated subject of the request and many more.&lt;/p>
&lt;/div></description></item><item><title>Authenticators</title><link>https://dadrus.github.io/docs/mechanisms/authenticators/</link><pubDate>Thu, 09 Jun 2022 18:56:56 +0200</pubDate><guid>https://dadrus.github.io/docs/mechanisms/authenticators/</guid><description>&lt;div class="paragraph">
&lt;p>Some of the supported authenticator types may support or require additional configuration. The corresponding properties are annotated with &lt;code>mandatory&lt;/code>, respectively &lt;code>optional&lt;/code> to denote configuration requirement, as well as with &lt;code>overridable&lt;/code>, &lt;code>not overriddable&lt;/code> and &lt;code>partially overridable&lt;/code> to indicate whether the property can be overridden in a rule pipeline.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_unauthorized">Unauthorized&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>This authenticator rejects all requests as unauthenticated (on HTTP response code level this is then mapped to &lt;code>401 Unauthorized&lt;/code>, hence the type name). It basically stops the successful execution of the pipeline resulting in the execution of the error handlers. This authenticator type doesn’t have any configuration options.&lt;/p>
&lt;/div></description></item><item><title>Authorizers</title><link>https://dadrus.github.io/docs/mechanisms/authorizers/</link><pubDate>Thu, 09 Jun 2022 18:57:03 +0200</pubDate><guid>https://dadrus.github.io/docs/mechanisms/authorizers/</guid><description>&lt;div class="paragraph">
&lt;p>Some of the authorizers may support or require additional configuration. The corresponding properties are annotated with &lt;code>mandatory&lt;/code>, respectively &lt;code>optional&lt;/code> to denote configuration requirement, as well as with &lt;code>overridable&lt;/code>, &lt;code>not overridable&lt;/code> and &lt;code>partially overridable&lt;/code> to indicate whether the property can be overridden in a rule pipeline.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_allow">Allow&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>As the name implies, this authorizer allows any request passing through. This authorizer type also doesn’t have any configuration options.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>To enable the usage of this authorizer, you have to set the &lt;code>type&lt;/code> property to &lt;code>allow&lt;/code>.&lt;/p>
&lt;/div></description></item><item><title>Contextualizers</title><link>https://dadrus.github.io/docs/mechanisms/contextualizers/</link><pubDate>Thu, 09 Jun 2022 18:57:10 +0200</pubDate><guid>https://dadrus.github.io/docs/mechanisms/contextualizers/</guid><description>&lt;div class="paragraph">
&lt;p>Some of the contextualizers may support or require additional configuration. The corresponding properties are annotated with &lt;code>mandatory&lt;/code>, respectively &lt;code>optional&lt;/code> to denote configuration requirement, as well as with &lt;code>overridable&lt;/code>, &lt;code>not overridable&lt;/code> and &lt;code>partially overridable&lt;/code> to indicate whether the property can be overridden in a rule pipeline.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_generic">Generic&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>This mechanism allows you to communicate to any API you want to fetch further information about the subject. Typical scenario is getting specific attributes for later authorization purposes which are not known to the authentication system and thus were not made available in &lt;a href="./docs/mechanisms/evaluation_objects/#_subject">&lt;code>Subject’s&lt;/code>&lt;/a> &lt;code>Attributes&lt;/code> property. If the API responses with a 2xx HTTP response code, the payload is made available in the &lt;a href="./docs/mechanisms/evaluation_objects/#_outputs">&lt;code>Outputs&lt;/code>&lt;/a> object, otherwise, if not overridden, an error is thrown and the execution of the authentication &amp;amp; authorization pipeline stops. To avoid overwriting of existing key value pairs, this object is however not available on the top level, but under a key named by the &lt;code>id&lt;/code> of the contextualizer (See also the example below). If the &lt;code>Content-Type&lt;/code> of the response is either ending with &lt;code>json&lt;/code> or is &lt;code>application/x-www-form-urlencoded&lt;/code>, the payload is decoded and made available as map, otherwise it is treated as string, but, as written above, is made available as well.&lt;/p>
&lt;/div></description></item><item><title>Finalizers</title><link>https://dadrus.github.io/docs/mechanisms/finalizers/</link><pubDate>Thu, 09 Jun 2022 18:57:16 +0200</pubDate><guid>https://dadrus.github.io/docs/mechanisms/finalizers/</guid><description>&lt;div class="paragraph">
&lt;p>Some finalizers may support or require additional configuration. The corresponding properties are annotated with &lt;code>mandatory&lt;/code>, respectively &lt;code>optional&lt;/code> to denote configuration requirement, as well as with &lt;code>overridable&lt;/code>, &lt;code>not overridable&lt;/code> and &lt;code>partially overridable&lt;/code> to indicate whether the property can be overridden in a rule pipeline.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_noop">Noop&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>As the name implies, this finalizer does nothing. This finalizer type also doesn’t have any configuration options.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>To enable the usage of this finalizer, you have to set the &lt;code>type&lt;/code> property to &lt;code>noop&lt;/code>.&lt;/p>
&lt;/div></description></item><item><title>Error Handlers</title><link>https://dadrus.github.io/docs/mechanisms/error_handlers/</link><pubDate>Thu, 09 Jun 2022 18:57:29 +0200</pubDate><guid>https://dadrus.github.io/docs/mechanisms/error_handlers/</guid><description>&lt;div class="paragraph">
&lt;p>Some of the error handlers may support or require additional configuration. The corresponding properties are annotated with &lt;code>mandatory&lt;/code>, respectively &lt;code>optional&lt;/code> to denote configuration requirement, as well as with &lt;code>overridable&lt;/code>, &lt;code>not overridable&lt;/code> and &lt;code>partially overridable&lt;/code> to indicate whether the property can be overridden in a rule pipeline.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_default">Default&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>This error handler is always there and is executed if no other error handler mechanism is responsible for the error. Actually, there is no need to explicitly configure it. The only exception is to allow overriding the &lt;a href="./docs/rules/default_rule/">default rule’s&lt;/a> error handler chain in a specific rule for performance reasons (if configured error handlers in the default rule should not be considered). This mechanism type doesn’t have any configuration options.&lt;/p>
&lt;/div></description></item><item><title>Regular Rule</title><link>https://dadrus.github.io/docs/rules/regular_rule/</link><pubDate>Thu, 09 Jun 2022 22:13:32 +0200</pubDate><guid>https://dadrus.github.io/docs/rules/regular_rule/</guid><description>&lt;div class="paragraph">
&lt;p>In the simplest case, a regular rule reuses mechanisms from the previously defined &lt;a href="./docs/mechanisms/catalogue/">catalogue&lt;/a> in its pipelines. In more complex scenarios, a rule can reconfigure parts of the mechanisms being used. The specific parts that can be reconfigured or overridden depend on the mechanism itself and are described in the mechanism-specific documentation. Reconfiguration is always limited to the particular rule’s pipeline and does not affect other rules.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_configuration">Configuration&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>A single regular rule consists of the following properties:&lt;/p>
&lt;/div></description></item><item><title>Default Rule</title><link>https://dadrus.github.io/docs/rules/default_rule/</link><pubDate>Thu, 09 Jun 2022 22:13:32 +0200</pubDate><guid>https://dadrus.github.io/docs/rules/default_rule/</guid><description>&lt;div class="sect1">
&lt;h2 id="_configuration">Configuration&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>The default rule can be configured using the &lt;code>default_rule&lt;/code> property supporting the options shown below.&lt;/p>
&lt;/div>
&lt;div class="admonitionblock note">
&lt;table>
&lt;tbody>&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-note" title="Note">&lt;/i>
&lt;/td>
&lt;td class="content">
&lt;div class="paragraph">
&lt;p>The default rule does not support all properties available in a &lt;a href="./docs/rules/regular_rule/">regular rule&lt;/a>.&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>It cannot be used to forward requests to an upstream service protected by heimdall. If heimdall is operating in reverse proxy mode, the default rule should be configured to reject requests. Otherwise, Heimdall will respond with an error.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The default rule also rejects requests containing encoded slashes in the URL path with a &lt;code>400 Bad Request&lt;/code> response. In a regular rule, this behavior can be configured.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The authentication stage cannot start with an insecure authenticator (i.e., authenticators that allow all requests to pass through). However, this enforcement can be disabled (not recommended) by starting heimdall with the &lt;code>--insecure-skip-secure-default-rule-enforcement&lt;/code> flag.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Rule Sets</title><link>https://dadrus.github.io/docs/rules/rule_sets/</link><pubDate>Thu, 09 Jun 2022 22:13:32 +0200</pubDate><guid>https://dadrus.github.io/docs/rules/rule_sets/</guid><description>&lt;div class="paragraph">
&lt;p>Depending on the configured provider, the rules can be then loaded from e.g. a plain old configuration file, residing in the local file system, or even from a Kubernetes environment as a custom resource. Thus, the structure and format of a rule set depends on the &lt;a href="./docs/rules/providers/">provider&lt;/a> used to load it. As of today, there are two supported formats:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>as a regular JSON/YAML file, the so-called &lt;a href="#_regular_rule_set">regular rule set&lt;/a>, and&lt;/p>
&lt;/li>
&lt;li>
&lt;p>as a kubernetes &lt;a href="#_kubernetes_rule_set">custom resource rule set&lt;/a>, which is actually a YAML/JSON file as well, but adheres to corresponding kubernetes requirements.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Rule Providers</title><link>https://dadrus.github.io/docs/rules/providers/</link><pubDate>Thu, 09 Jun 2022 22:13:54 +0200</pubDate><guid>https://dadrus.github.io/docs/rules/providers/</guid><description>&lt;div class="paragraph">
&lt;p>Providers allow definition of sources to load the &lt;a href="./docs/rules/rule_sets/">rule sets&lt;/a> from. These make heimdall’s behavior dynamic. All providers, you want to enable for a heimdall instance must be configured within the &lt;code>providers&lt;/code> section of heimdall’s configuration.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Below, you can find the description and configuration options for currently supported providers.&lt;/p>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_filesystem">Filesystem&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>The filesystem provider allows loading of &lt;a href="./docs/rules/rule_sets/#_regular_rule_set">regular rule sets&lt;/a> in JSON or YAML format from a file system.&lt;/p>
&lt;/div>
&lt;div class="sect2">
&lt;h3 id="_configuration">Configuration&lt;/h3>
&lt;div class="paragraph">
&lt;p>The configuration of this provider goes into the &lt;code>file_system&lt;/code> property. This provider is handy for e.g. starting playing around with heimdall, e.g. locally, or using a container runtime, as well as if your deployment strategy considers deploying a heimdall instance as a Side-Car for each of your services.&lt;/p>
&lt;/div></description></item><item><title>Type Definitions</title><link>https://dadrus.github.io/docs/configuration/types/</link><pubDate>Thu, 09 Jun 2022 18:56:56 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/types/</guid><description>&lt;div class="sect1">
&lt;h2 id="_assertions">Assertions&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>This type enables configuration of required token and claim assertions. Depending on the object type (JWT or introspection response), the assertions apply to different parts of such objects.&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;strong>&lt;code>scopes&lt;/code>&lt;/strong>: &lt;em>&lt;a href="#_scopes_matcher">Scopes Matcher&lt;/a>&lt;/em> (optional)&lt;/p>
&lt;div class="paragraph">
&lt;p>Required scopes given to the client.&lt;/p>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>audience&lt;/code>&lt;/strong>: &lt;em>string array&lt;/em> (optional)&lt;/p>
&lt;div class="paragraph">
&lt;p>Values to be matched in the &lt;code>aud&lt;/code> claim. This assertion evaluates to &lt;code>true&lt;/code> if at least one entry in the given &lt;code>audience&lt;/code> array is present in the &lt;code>aud&lt;/code> claim. Both cases, either as whitespace separated string, or a JSON array are considered.&lt;/p>
&lt;/div></description></item><item><title>Reference</title><link>https://dadrus.github.io/docs/configuration/reference/</link><pubDate>Thu, 09 Jun 2022 18:57:50 +0200</pubDate><guid>https://dadrus.github.io/docs/configuration/reference/</guid><description>&lt;div class="paragraph">
&lt;p>Below you can find possible contents (not exhaustive) for Heimdall’s &lt;code>config.yaml&lt;/code> file. Head over to configuration documentation to get detailed explanation.&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="rouge highlight">&lt;code data-lang="yaml">&lt;span class="na">serve&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">host&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">127.0.0.1&lt;/span>
 &lt;span class="na">port&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">4469&lt;/span>
 &lt;span class="na">respond&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">verbose&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>
 &lt;span class="na">with&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">authorization_error&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">code&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">404&lt;/span>
 &lt;span class="na">authentication_error&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">code&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">404&lt;/span>
 &lt;span class="na">timeout&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">read&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">2s&lt;/span>
 &lt;span class="na">write&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">5s&lt;/span>
 &lt;span class="na">idle&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">2m&lt;/span>
 &lt;span class="na">connections_limit&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">max_per_host&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">10&lt;/span>
 &lt;span class="na">max_idle&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">100&lt;/span>
 &lt;span class="na">max_idle_per_host&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">50&lt;/span>
 &lt;span class="na">buffer_limit&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">read&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">10KB&lt;/span>
 &lt;span class="na">write&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">10KB&lt;/span>
 &lt;span class="na">cors&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">allowed_origins&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">example.org&lt;/span>
 &lt;span class="na">allowed_methods&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">GET&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">POST&lt;/span>
 &lt;span class="na">allowed_headers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">Authorization&lt;/span>
 &lt;span class="na">exposed_headers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">X-My-Header&lt;/span>
 &lt;span class="na">allow_credentials&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>
 &lt;span class="na">max_age&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">1m&lt;/span>
 &lt;span class="na">tls&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">key_store&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">path&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">/path/to/key/store.pem&lt;/span>
 &lt;span class="na">password&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">VerySecure!&lt;/span>
 &lt;span class="na">key_id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">first_entry&lt;/span>
 &lt;span class="na">min_version&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">TLS1.2&lt;/span>
 &lt;span class="na">cipher_suites&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256&lt;/span>
 &lt;span class="na">trusted_proxies&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">192.168.1.0/24&lt;/span>

&lt;span class="na">management&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">host&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">127.0.0.1&lt;/span>
 &lt;span class="na">port&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">4457&lt;/span>
 &lt;span class="na">timeout&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">read&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">2s&lt;/span>
 &lt;span class="na">write&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">5s&lt;/span>
 &lt;span class="na">idle&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">2m&lt;/span>
 &lt;span class="na">cors&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">allowed_origins&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">example.org&lt;/span>
 &lt;span class="na">allowed_methods&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">GET&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">POST&lt;/span>
 &lt;span class="na">allowed_headers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">Authorization&lt;/span>
 &lt;span class="na">exposed_headers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">X-My-Header&lt;/span>
 &lt;span class="na">allow_credentials&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>
 &lt;span class="na">max_age&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">1m&lt;/span>
 &lt;span class="na">tls&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">key_store&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">path&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">/path/to/key/store.pem&lt;/span>
 &lt;span class="na">min_version&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">TLS1.2&lt;/span>

&lt;span class="na">cache&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">redis-sentinel&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">db&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">2&lt;/span>
 &lt;span class="na">master&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">whatever&lt;/span>
 &lt;span class="na">nodes&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">foo:1234&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">bar:1234&lt;/span>
 &lt;span class="na">credentials&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">path&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">/path/to/credentials.yaml&lt;/span>
 &lt;span class="na">tls&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">key_store&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">path&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">/path/to/redis_client_keystore.pem&lt;/span>
 &lt;span class="na">key_id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bf5d129a7fec8b1fde11eab459784cc2f14e6c1d&lt;/span>
 &lt;span class="na">min_version&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">TLS1.2&lt;/span>
 &lt;span class="na">cipher_suites&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256&lt;/span>
 &lt;span class="na">client_cache&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">ttl&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">10m&lt;/span>
 &lt;span class="na">max_flush_delay&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">20us&lt;/span>

&lt;span class="na">secrets_reload_enabled&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>

&lt;span class="na">log&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">level&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">debug&lt;/span>
 &lt;span class="na">format&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">text&lt;/span>

&lt;span class="na">tracing&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">enabled&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>
 &lt;span class="na">span_processor&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">batch&lt;/span>

&lt;span class="na">metrics&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">enabled&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>

&lt;span class="na">profiling&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">enabled&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">false&lt;/span>
 &lt;span class="na">host&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">0.0.0.0&lt;/span>
 &lt;span class="na">port&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="m">9000&lt;/span>

&lt;span class="na">mechanisms&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">authenticators&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">anonymous_authenticator&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">anonymous&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">unauthorized_authenticator&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">unauthorized&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">basic_auth&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">user_id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bar&lt;/span>
 &lt;span class="na">password&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">baz&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">kratos_session_authenticator&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">generic&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">identity_info_endpoint&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://127.0.0.1:4433/sessions/whoami&lt;/span>
 &lt;span class="na">auth&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">auth&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">basic_auth&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">user&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="na">password&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bar&lt;/span>
 &lt;span class="na">retry&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">max_delay&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">300ms&lt;/span>
 &lt;span class="na">give_up_after&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">2s&lt;/span>
 &lt;span class="na">authentication_data_source&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">cookie&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">ory_kratos_session&lt;/span>
 &lt;span class="na">forward_cookies&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">ory_kratos_session&lt;/span>
 &lt;span class="na">subject&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">attributes&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">@this&amp;#34;&lt;/span>
 &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">identity.id&amp;#34;&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">hydra_authenticator&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">oauth2_introspection&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">introspection_endpoint&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://hydra:4445/oauth2/introspect&lt;/span>
 &lt;span class="na">retry&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">max_delay&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">300ms&lt;/span>
 &lt;span class="na">give_up_after&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">2s&lt;/span>
 &lt;span class="na">auth&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">api_key&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">in&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">header&lt;/span>
 &lt;span class="na">name&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">X-Api-Key&lt;/span>
 &lt;span class="na">value&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">VerySecret!&lt;/span>
 &lt;span class="na">token_source&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">header&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">Authorization&lt;/span>
 &lt;span class="na">scheme&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">Bearer&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">query_parameter&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">access_token&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">body_parameter&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">access_token&lt;/span>
 &lt;span class="na">assertions&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">issuers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">https://127.0.0.1:4444/&lt;/span>
 &lt;span class="na">scopes&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">bar&lt;/span>
 &lt;span class="na">audience&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">bla&lt;/span>
 &lt;span class="na">subject&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">attributes&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">@this&amp;#34;&lt;/span>
 &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">sub&amp;#34;&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">jwt_authenticator&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">jwt&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">metadata_endpoint&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://auth-server/.well-known/oauth-authorization-server&lt;/span>
 &lt;span class="na">disable_issuer_identifier_verification&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>
 &lt;span class="na">http_cache&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">enabled&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>
 &lt;span class="na">cache_ttl&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">1h&lt;/span>
 &lt;span class="na">resolved_endpoints&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">jwks_uri&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">auth&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">oauth2_client_credentials&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">token_url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://auth-server/token&lt;/span>
 &lt;span class="na">client_id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="na">client_secret&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bar&lt;/span>
 &lt;span class="na">retry&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">give_up_after&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">1m&lt;/span>
 &lt;span class="na">max_delay&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">5s&lt;/span>
 &lt;span class="na">http_cache&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">enabled&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>
 &lt;span class="na">default_ttl&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">10m&lt;/span>
 &lt;span class="na">jwt_source&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">header&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">Authorization&lt;/span>
 &lt;span class="na">scheme&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">Bearer&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">query_parameter&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">access_token&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">body_parameter&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">access_token&lt;/span>
 &lt;span class="na">assertions&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">audience&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">bla&lt;/span>
 &lt;span class="na">scopes&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="na">allowed_algorithms&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">RS256&lt;/span>
 &lt;span class="na">subject&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">attributes&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">@this&amp;#34;&lt;/span>
 &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">identity.id&amp;#34;&lt;/span>
 &lt;span class="na">cache_ttl&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">5m&lt;/span>

 &lt;span class="na">authorizers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">allow_all_authorizer&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">allow&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">deny_all_authorizer&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">deny&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">remote_authorizer&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">remote&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">endpoint&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://my-authz-system/{{ .Values.some-key }}&lt;/span>
 &lt;span class="na">method&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">POST&lt;/span>
 &lt;span class="na">headers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">foo-bar&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">{{&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">.Subject.ID&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">}}&amp;#34;&lt;/span>
 &lt;span class="na">auth&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">api_key&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">in&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">header&lt;/span>
 &lt;span class="na">name&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">X-API-Key&lt;/span>
 &lt;span class="na">value&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">super duper secret&lt;/span>
 &lt;span class="na">values&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">some-key&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">some-value&lt;/span>
 &lt;span class="na">payload&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">https://bla.bar&amp;#34;&lt;/span>
 &lt;span class="na">expressions&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">expression&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="pi">|&lt;/span>
 &lt;span class="s">Payload.response == true&lt;/span>
 &lt;span class="na">forward_response_headers_to_upstream&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">bla-bar&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">user_is_admin_authz&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">cel&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">values&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">some_key&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">some-value&lt;/span>
 &lt;span class="na">expressions&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">expression&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">in&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">Subject.Attributes.groups&amp;#34;&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">expression&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">Values.some_key&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">==&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">foo&amp;#34;&lt;/span>

 &lt;span class="na">contextualizers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">subscription_contextualizer&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">generic&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">endpoint&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://foo.bar&lt;/span>
 &lt;span class="na">method&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">GET&lt;/span>
 &lt;span class="na">headers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">bla&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bla&lt;/span>
 &lt;span class="na">auth&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">oauth2_client_credentials&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">auth_method&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">request_body&lt;/span>
 &lt;span class="na">token_url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://bar.foo&lt;/span>
 &lt;span class="na">client_id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="na">client_secret&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bar&lt;/span>
 &lt;span class="na">cache_ttl&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">20s&lt;/span>
 &lt;span class="na">header&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">name&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">X-Foo&lt;/span>
 &lt;span class="na">scheme&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">Bar&lt;/span>
 &lt;span class="na">payload&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">profile_data_contextualizer&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">generic&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">endpoint&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://profile&lt;/span>
 &lt;span class="na">headers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">foo&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bar&lt;/span>
 &lt;span class="na">continue_pipeline_on_error&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>

 &lt;span class="na">finalizers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">jwt&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">jwt&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">signer&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">name&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foobar&lt;/span>
 &lt;span class="na">key_store&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">path&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">/opt/heimdall/keystore.pem&lt;/span>
 &lt;span class="na">password&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">VeryInsecure!&lt;/span>
 &lt;span class="na">key_id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="na">ttl&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">5m&lt;/span>
 &lt;span class="na">header&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">name&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">Foo&lt;/span>
 &lt;span class="na">scheme&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">Bar&lt;/span>
 &lt;span class="na">claims&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="s">{&amp;#39;user&amp;#39;:&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">{{&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">quote&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">.Subject.ID&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">}}&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">}&amp;#34;&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bla&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">header&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">headers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">foo-bar&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">bla&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">blabla&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">cookie&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">cookies&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">foo-bar&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="s">{{&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">.Subject.ID&lt;/span>&lt;span class="nv"> &lt;/span>&lt;span class="s">}}&amp;#39;&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">get_token&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">oauth2_client_credentials&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">header&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">name&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">X-Token&lt;/span>
 &lt;span class="na">token_url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://my-oauth-provider.com/token&lt;/span>
 &lt;span class="na">client_id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">my_client&lt;/span>
 &lt;span class="na">client_secret&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">VerySecret!&lt;/span>
 &lt;span class="na">auth_method&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">basic_auth&lt;/span>
 &lt;span class="na">cache_ttl&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">5m&lt;/span>
 &lt;span class="na">scopes&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="s">bar&lt;/span>

 &lt;span class="na">error_handlers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">default&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">default&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">authenticate_with_kratos&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">redirect&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">to&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://127.0.0.1:4433/self-service/login/browser?return_to={{ .Request.URL | urlenc }}&lt;/span>

&lt;span class="na">default_rule&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">execute&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">authenticator&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">anonymous_authenticator&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">finalizer&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">jwt&lt;/span>
 &lt;span class="na">on_error&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">error_handler&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">authenticate_with_kratos&lt;/span>
 &lt;span class="na">if&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="pi">|&lt;/span>
 &lt;span class="s">((type(Error) == authentication_error &amp;amp;&amp;amp; Error.Source == &amp;#34;kratos_session_authenticator&amp;#34;) ||&lt;/span>
 &lt;span class="s">type(Error) == authorization_error) &amp;amp;&amp;amp;&lt;/span>
 &lt;span class="s">Request.Header(&amp;#34;Accept&amp;#34;).contains(&amp;#34;*/*&amp;#34;)&lt;/span>

&lt;span class="na">providers&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">file_system&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">src&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">test_rules.yaml&lt;/span>
 &lt;span class="na">watch&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">true&lt;/span>

 &lt;span class="na">http_endpoint&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">watch_interval&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">5m&lt;/span>
 &lt;span class="na">endpoints&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://foo.bar/ruleset1&lt;/span>
 &lt;span class="na">http_cache&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">enabled&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="kc">false&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">https://foo.bar/ruleset2&lt;/span>
 &lt;span class="na">retry&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">give_up_after&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">5s&lt;/span>
 &lt;span class="na">max_delay&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">250ms&lt;/span>
 &lt;span class="na">auth&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">type&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">api_key&lt;/span>
 &lt;span class="na">config&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">name&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">api_key&lt;/span>
 &lt;span class="na">value&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">super-secret&lt;/span>
 &lt;span class="na">in&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">cookie&lt;/span>
 &lt;span class="na">header&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">X-Customer-Header&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">Some Value&lt;/span>

 &lt;span class="na">cloud_blob&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">watch_interval&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">1m&lt;/span>
 &lt;span class="na">buckets&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">gs://my-bucket&lt;/span>
 &lt;span class="na">prefix&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">service1&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">azblob://my-bucket&lt;/span>
 &lt;span class="na">prefix&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">service2&lt;/span>
 &lt;span class="pi">-&lt;/span> &lt;span class="na">url&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">s3://my-bucket/my-rule-set&lt;/span>

 &lt;span class="na">kubernetes&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">auth_class&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="na">tls&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">key_id&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">foo&lt;/span>
 &lt;span class="na">key_store&lt;/span>&lt;span class="pi">:&lt;/span>
 &lt;span class="na">path&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">/path/to/pem.file&lt;/span>
 &lt;span class="na">password&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">VerySecret!&lt;/span>
 &lt;span class="na">min_version&lt;/span>&lt;span class="pi">:&lt;/span> &lt;span class="s">TLS1.3&lt;/span>&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div></description></item></channel></rss>