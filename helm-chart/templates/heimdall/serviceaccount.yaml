apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "heimdall.fullname" . }}
  namespace: {{ include "heimdall.namespace" . }}
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/service-account.name: {{ include "heimdall.fullname" . }}
automountServiceAccountToken: false

---
# Rules are not expected to contain any secrets. For that reason it is acceptable to
# have a long living token, which might be exposed via a k8s API
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "heimdall.fullname" . }}
  namespace: {{ include "heimdall.namespace" . }}
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/service-account.name: {{ include "heimdall.fullname" . }}
type: kubernetes.io/service-account-token

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ruleset-reader
  namespace: {{ include "heimdall.namespace" . }}
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
rules:
  - apiGroups: ["heimdall.dadrus.github.com"]
    resources: ["rulesets"]
    verbs: ["get", "watch", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ruleset-reader
  namespace: {{ include "heimdall.namespace" . }}
  labels:
    {{- include "heimdall.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "heimdall.fullname" . }}
    namespace: {{ include "heimdall.namespace" . }}
roleRef:
  kind: ClusterRole
  name: ruleset-reader
  apiGroup: rbac.authorization.k8s.io
