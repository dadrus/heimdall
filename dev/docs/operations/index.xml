<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operations on Heimdall</title><link>https://dadrus.github.io/docs/operations/</link><description>Recent content in Operations on Heimdall</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 23 Oct 2025 11:13:17 +0000</lastBuildDate><atom:link href="https://dadrus.github.io/docs/operations/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuration</title><link>https://dadrus.github.io/docs/operations/configuration/</link><pubDate>Fri, 08 Jul 2022 09:16:36 +0200</pubDate><guid>https://dadrus.github.io/docs/operations/configuration/</guid><description>&lt;div class="paragraph"&gt;
&lt;p&gt;In heimdall, configuration encompasses two distinct concepts:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Static startup configuration, which is the focus of this document, and&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration of rules and rule sets, detailed &lt;a href="../../docs/rules/rule_sets/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The static configuration establishes core services and components, such as the &lt;a href="../../docs/services/main/"&gt;main service&lt;/a&gt; - the primary entry point heimdall listens to for access control decisions - along with observability features like &lt;a href="../../docs/operations/observability/#_logging"&gt;logging&lt;/a&gt;, the &lt;a href="../../docs/concepts/mechanisms/"&gt;mechanism catalogue&lt;/a&gt;, the &lt;a href="../../docs/rules/default_rule/"&gt;default rule&lt;/a&gt;, and &lt;a href="../../docs/rules/providers/"&gt;rule providers&lt;/a&gt;. These elements are designed to remain relatively stable over time.&lt;/p&gt;
&lt;/div&gt;</description></item><item><title>CLI</title><link>https://dadrus.github.io/docs/operations/cli/</link><pubDate>Thu, 09 Jun 2022 18:57:50 +0200</pubDate><guid>https://dadrus.github.io/docs/operations/cli/</guid><description>&lt;div class="sect1"&gt;
&lt;h2 id="_usage_patterns"&gt;Usage Patterns&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="rouge highlight"&gt;&lt;code data-lang="bash"&gt;heimdall &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;flags] &lt;span class="o"&gt;[&lt;/span&gt;arguments]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Use &lt;code&gt;heimdall help&lt;/code&gt; to get overview about available commands, respectively &lt;code&gt;heimdall [command] help&lt;/code&gt; for help on any command.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Flag’s usage:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="rouge highlight"&gt;&lt;code data-lang="bash"&gt;&lt;span class="c"&gt;# set flag_argument to flag(s)&lt;/span&gt;
heimdall &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--flag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;flag_argument] &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;flag_argument]]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;E.g.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="rouge highlight"&gt;&lt;code data-lang="bash"&gt;heimdall validate config &lt;span class="nt"&gt;-c&lt;/span&gt; config.yaml&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="_commands"&gt;Commands&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;completion&lt;/code&gt;&lt;/p&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Generates the autocompletion script for the specified shell.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;health&lt;/code&gt;&lt;/p&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Calls heimdall’s healthcheck endpoint to verify the status of the deployment.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;help&lt;/code&gt;&lt;/p&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Provides an overview about the available commands and their descriptions.&lt;/p&gt;
&lt;/div&gt;</description></item><item><title>Observability</title><link>https://dadrus.github.io/docs/operations/observability/</link><pubDate>Wed, 03 Aug 2022 18:53:31 +0200</pubDate><guid>https://dadrus.github.io/docs/operations/observability/</guid><description>&lt;div class="sect1"&gt;
&lt;h2 id="_logging"&gt;Logging&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Heimdall’s implementation uses &lt;a href="https://github.com/rs/zerolog"&gt;zerolog&lt;/a&gt; - Zero Allocation JSON Logger, which can however also log in plain text. All emitted log statements include information related to distributed tracing (if tracing is enabled) so that not only log statements can be correlated to traces, but also all log statements belonging to single request/transaction can be correlated as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="_configuration"&gt;Configuration&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Logging configuration can be adjusted in the &lt;code&gt;log&lt;/code&gt; property of heimdall’s configuration and supports following properties.&lt;/p&gt;
&lt;/div&gt;</description></item><item><title>Caching</title><link>https://dadrus.github.io/docs/operations/cache/</link><pubDate>Mon, 06 Nov 2023 13:16:34 +0100</pubDate><guid>https://dadrus.github.io/docs/operations/cache/</guid><description>&lt;div class="paragraph"&gt;
&lt;p&gt;Even some default caching is in place, and you can instruct heimdall to cache particular data for some amount of time, like e.g how long to cache the response from the JWKS endpoint when using the &lt;a href="../../docs/mechanisms/authenticators/#_jwt"&gt;JWT Authenticator&lt;/a&gt;, all these options require a caching backend to be available. Otherwise, the corresponding configurations do not have any effect.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Configuration of that backend happens by making use of the &lt;code&gt;cache&lt;/code&gt; property in heimdall’s configuration, which supports the following options:&lt;/p&gt;
&lt;/div&gt;</description></item><item><title>Security</title><link>https://dadrus.github.io/docs/operations/security/</link><pubDate>Mon, 15 Aug 2022 08:33:35 +0200</pubDate><guid>https://dadrus.github.io/docs/operations/security/</guid><description>&lt;div class="sect1"&gt;
&lt;h2 id="_defaults"&gt;Defaults&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The following configurations and behaviors are enforced by default:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All inbound communication must use TLS. TLS configuration is required for all services and endpoints exposed by heimdall. This enforcement can be disabled (not recommended) by starting Heimdall with the &lt;code&gt;--insecure-skip-ingress-tls-enforcement&lt;/code&gt; flag.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All outbound communication must use TLS. TLS configuration is required for all services and endpoints heimdall communicates with. This enforcement can be disabled (not recommended) by starting Heimdall with the &lt;code&gt;--insecure-skip-egress-tls-enforcement&lt;/code&gt; flag.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If heimdall is used in &lt;a href="../../docs/concepts/operating_modes/#_proxy_mode"&gt;proxy mode&lt;/a&gt;, communication with upstream services while proxying requests must use TLS. This enforcement can be disabled (not recommended) by starting heimdall with the &lt;code&gt;--insecure-skip-upstream-tls-enforcement&lt;/code&gt; flag.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If heimdall is operated as part of e.g. a service mesh, that handles secure communication between the services, you may choose to disable TLS enforcement. This can be done by using the individual flags mentioned above or, alternatively, by using the &lt;code&gt;--insecure-skip-all-tls-enforcement&lt;/code&gt; flag, which enables all the above options at once.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuring the &lt;a href="../../docs/services/main/#_trusted_proxies"&gt;&lt;code&gt;trusted_proxies&lt;/code&gt;&lt;/a&gt; property to allow insecure networks (&lt;code&gt;0.0.0.0/0&lt;/code&gt;, &lt;code&gt;0/0&lt;/code&gt;, &lt;code&gt;0000:0000:0000:0000:0000:0000:0000:0000/0&lt;/code&gt;, and &lt;code&gt;::/0&lt;/code&gt;) is prohibited. See also &lt;a href="../../docs/operations/security/#_http_header_security_considerations"&gt;HTTP Header Security Considerations&lt;/a&gt;. This enforcement can be disabled (not recommended) by starting heimdall with the &lt;code&gt;--insecure-skip-secure-trusted-proxies-enforcement&lt;/code&gt; flag.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The authentication stage of the &lt;a href="../../docs/rules/default_rule/"&gt;default rule&lt;/a&gt; cannot start with an insecure authenticator (i.e., authenticators that allow all requests to pass through). This enforcement can be disabled (not recommended) by starting heimdall with the &lt;code&gt;--insecure-skip-secure-default-rule-enforcement&lt;/code&gt; flag.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description></item></channel></rss>