// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	keyholder "github.com/dadrus/heimdall/internal/keyholder"
	jose "github.com/go-jose/go-jose/v4"
	mock "github.com/stretchr/testify/mock"
)

// RegistryMock is an autogenerated mock type for the Registry type
type RegistryMock struct {
	mock.Mock
}

type RegistryMock_Expecter struct {
	mock *mock.Mock
}

func (_m *RegistryMock) EXPECT() *RegistryMock_Expecter {
	return &RegistryMock_Expecter{mock: &_m.Mock}
}

// AddKeyHolder provides a mock function with given fields: kh
func (_m *RegistryMock) AddKeyHolder(kh keyholder.KeyHolder) {
	_m.Called(kh)
}

// RegistryMock_AddKeyHolder_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddKeyHolder'
type RegistryMock_AddKeyHolder_Call struct {
	*mock.Call
}

// AddKeyHolder is a helper method to define mock.On call
//   - kh keyholder.KeyHolder
func (_e *RegistryMock_Expecter) AddKeyHolder(kh interface{}) *RegistryMock_AddKeyHolder_Call {
	return &RegistryMock_AddKeyHolder_Call{Call: _e.mock.On("AddKeyHolder", kh)}
}

func (_c *RegistryMock_AddKeyHolder_Call) Run(run func(kh keyholder.KeyHolder)) *RegistryMock_AddKeyHolder_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(keyholder.KeyHolder))
	})
	return _c
}

func (_c *RegistryMock_AddKeyHolder_Call) Return() *RegistryMock_AddKeyHolder_Call {
	_c.Call.Return()
	return _c
}

func (_c *RegistryMock_AddKeyHolder_Call) RunAndReturn(run func(keyholder.KeyHolder)) *RegistryMock_AddKeyHolder_Call {
	_c.Call.Return(run)
	return _c
}

// Keys provides a mock function with given fields:
func (_m *RegistryMock) Keys() []jose.JSONWebKey {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Keys")
	}

	var r0 []jose.JSONWebKey
	if rf, ok := ret.Get(0).(func() []jose.JSONWebKey); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]jose.JSONWebKey)
		}
	}

	return r0
}

// RegistryMock_Keys_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Keys'
type RegistryMock_Keys_Call struct {
	*mock.Call
}

// Keys is a helper method to define mock.On call
func (_e *RegistryMock_Expecter) Keys() *RegistryMock_Keys_Call {
	return &RegistryMock_Keys_Call{Call: _e.mock.On("Keys")}
}

func (_c *RegistryMock_Keys_Call) Run(run func()) *RegistryMock_Keys_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *RegistryMock_Keys_Call) Return(_a0 []jose.JSONWebKey) *RegistryMock_Keys_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *RegistryMock_Keys_Call) RunAndReturn(run func() []jose.JSONWebKey) *RegistryMock_Keys_Call {
	_c.Call.Return(run)
	return _c
}

// NewRegistryMock creates a new instance of RegistryMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRegistryMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *RegistryMock {
	mock := &RegistryMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
