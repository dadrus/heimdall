// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	_interface "github.com/dadrus/heimdall/internal/handler/proxy2/interface"

	mock "github.com/stretchr/testify/mock"
)

// RequestContextFactoryMock is an autogenerated mock type for the RequestContextFactory type
type RequestContextFactoryMock struct {
	mock.Mock
}

type RequestContextFactoryMock_Expecter struct {
	mock *mock.Mock
}

func (_m *RequestContextFactoryMock) EXPECT() *RequestContextFactoryMock_Expecter {
	return &RequestContextFactoryMock_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: rw, req
func (_m *RequestContextFactoryMock) Create(rw http.ResponseWriter, req *http.Request) _interface.RequestContext {
	ret := _m.Called(rw, req)

	var r0 _interface.RequestContext
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request) _interface.RequestContext); ok {
		r0 = rf(rw, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(_interface.RequestContext)
		}
	}

	return r0
}

// RequestContextFactoryMock_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type RequestContextFactoryMock_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - rw http.ResponseWriter
//   - req *http.Request
func (_e *RequestContextFactoryMock_Expecter) Create(rw interface{}, req interface{}) *RequestContextFactoryMock_Create_Call {
	return &RequestContextFactoryMock_Create_Call{Call: _e.mock.On("Create", rw, req)}
}

func (_c *RequestContextFactoryMock_Create_Call) Run(run func(rw http.ResponseWriter, req *http.Request)) *RequestContextFactoryMock_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *RequestContextFactoryMock_Create_Call) Return(_a0 _interface.RequestContext) *RequestContextFactoryMock_Create_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *RequestContextFactoryMock_Create_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request) _interface.RequestContext) *RequestContextFactoryMock_Create_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewRequestContextFactoryMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewRequestContextFactoryMock creates a new instance of RequestContextFactoryMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRequestContextFactoryMock(t mockConstructorTestingTNewRequestContextFactoryMock) *RequestContextFactoryMock {
	mock := &RequestContextFactoryMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
