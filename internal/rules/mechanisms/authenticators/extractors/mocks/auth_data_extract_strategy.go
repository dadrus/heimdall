// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	heimdall "github.com/dadrus/heimdall/internal/heimdall"
	mock "github.com/stretchr/testify/mock"
)

// AuthDataExtractStrategyMock is an autogenerated mock type for the AuthDataExtractStrategy type
type AuthDataExtractStrategyMock struct {
	mock.Mock
}

type AuthDataExtractStrategyMock_Expecter struct {
	mock *mock.Mock
}

func (_m *AuthDataExtractStrategyMock) EXPECT() *AuthDataExtractStrategyMock_Expecter {
	return &AuthDataExtractStrategyMock_Expecter{mock: &_m.Mock}
}

// GetAuthData provides a mock function with given fields: ctx
func (_m *AuthDataExtractStrategyMock) GetAuthData(ctx heimdall.Context) (string, error) {
	ret := _m.Called(ctx)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(heimdall.Context) (string, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(heimdall.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(heimdall.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AuthDataExtractStrategyMock_GetAuthData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAuthData'
type AuthDataExtractStrategyMock_GetAuthData_Call struct {
	*mock.Call
}

// GetAuthData is a helper method to define mock.On call
//   - ctx heimdall.Context
func (_e *AuthDataExtractStrategyMock_Expecter) GetAuthData(ctx interface{}) *AuthDataExtractStrategyMock_GetAuthData_Call {
	return &AuthDataExtractStrategyMock_GetAuthData_Call{Call: _e.mock.On("GetAuthData", ctx)}
}

func (_c *AuthDataExtractStrategyMock_GetAuthData_Call) Run(run func(ctx heimdall.Context)) *AuthDataExtractStrategyMock_GetAuthData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(heimdall.Context))
	})
	return _c
}

func (_c *AuthDataExtractStrategyMock_GetAuthData_Call) Return(_a0 string, _a1 error) *AuthDataExtractStrategyMock_GetAuthData_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AuthDataExtractStrategyMock_GetAuthData_Call) RunAndReturn(run func(heimdall.Context) (string, error)) *AuthDataExtractStrategyMock_GetAuthData_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewAuthDataExtractStrategyMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthDataExtractStrategyMock creates a new instance of AuthDataExtractStrategyMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthDataExtractStrategyMock(t mockConstructorTestingTNewAuthDataExtractStrategyMock) *AuthDataExtractStrategyMock {
	mock := &AuthDataExtractStrategyMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
