<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on Heimdall</title><link>https://dadrus.github.io/docs/getting_started/</link><description>Recent content in Getting Started on Heimdall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 29 Nov 2023 22:03:12 +0200</lastBuildDate><atom:link href="https://dadrus.github.io/docs/getting_started/index.xml" rel="self" type="application/rss+xml"/><item><title>Discover heimdall</title><link>https://dadrus.github.io/docs/getting_started/discover_heimdall/</link><pubDate>Wed, 29 Nov 2023 22:03:28 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/discover_heimdall/</guid><description>What is heimdall? Heimdall is a cloud native identity aware proxy and access control decision service inspired by the Zero Trust idea. It brings together authentication and authorization systems and can be thought as an orchestrator for these in front of your services, allowing however completely retaining control even without the need for any type of maintenance in your own code.
You can use it
integrated into available proxies and API gateways, allowing implementation of Edge-level Authorization Architectures, or</description></item><item><title>Install heimdall</title><link>https://dadrus.github.io/docs/getting_started/installation/</link><pubDate>Mon, 25 Jul 2022 18:22:50 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/installation/</guid><description>Source Code You can always build a copy of heimdall by following the following instructions for your OS/environment.
Prerequisites git
The Go programming language &amp;gt;= 1.24
Download Retrieve the latest copy of heimdall source code by cloning the git repository
$ git clone git@github.com:dadrus/heimdall.git Build with go Build using a single line with go build
$ CGO_ENABLED=0 go build -trimpath -ldflags=&amp;#34;-buildid= -w -s -X github.com/dadrus/heimdall/version.Version==my-custom-build&amp;#34; The flags are set by intention.</description></item><item><title>Protect an Application</title><link>https://dadrus.github.io/docs/getting_started/protect_an_app/</link><pubDate>Mon, 04 Mar 2024 08:54:47 +0200</pubDate><guid>https://dadrus.github.io/docs/getting_started/protect_an_app/</guid><description>Overview In this guide weâ€™re going to configure two setups, both protecting a service which exposes a couple of endpoints:
The /public endpoint is as the name implies public. Every request to it should be forwarded as is.
The /user endpoint should only be accessible to users with the role user.
The /admin endpoint should only be accessible to users with the role admin and
the /private endpoint, as well as any other potentially exposed endpoint should not be accessible at all.</description></item></channel></rss>