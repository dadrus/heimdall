<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Authentication Protocols &amp; Services on Heimdall</title><link>https://dadrus.github.io/guides/authn/</link><description>Recent content in Authentication Protocols &amp; Services on Heimdall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 13 Sep 2024 12:54:41 +0200</lastBuildDate><atom:link href="https://dadrus.github.io/guides/authn/index.xml" rel="self" type="application/rss+xml"/><item><title>First-Party Authentication with OpenID Connect</title><link>https://dadrus.github.io/guides/authn/oidc_first_party_auth/</link><pubDate>Fri, 04 Nov 2022 09:00:41 +0200</pubDate><guid>https://dadrus.github.io/guides/authn/oidc_first_party_auth/</guid><description>By the end of this guide, you’ll have a functional setup where heimdall uses Keycloak to authenticate users and route requests based on their authentication status and roles for role-based access control.
Although this guide uses Keycloak as identity provider (IDP), you can achieve the same results with Zitadel, Boruta, or any other OpenID Connect-compatible IDP.
Overview In this guide, we’ll set up a Docker Compose environment where heimdall secures services and controls access to specific endpoints:</description></item></channel></rss>