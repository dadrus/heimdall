log:
  level: debug

cache:
  type: redis
  redis:
    addr: localhost:6379
    username: default
    password: secret
    db: 0
    tls:
      key_store:
        path: ./certificates/tests/tls/redis_client_keystore.pem
      key_id: bf5d129a7fec8b1fde11eab459784cc2f14e6c1d
      min_version: TLS1.2
      cipher_suites:
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
    additional_ca: ./certificates/tests/tls/ca.crt

serve:
  decision:
    trusted_proxies:
      - 0.0.0.0/0

rules:
  mechanisms:
    authenticators:
      - id: do_nothing
        type: noop
      - id: anon
        type: anonymous
      - id: reject_requests
        type: unauthorized
    finalizers:
      - id: do_nothing
        type: noop
      - id: create_jwt
        type: jwt
    error_handlers:
      - id: default
        type: default
      - id: redirect_to_login
        type: redirect
        config:
          to: http://127.0.0.1:8080/login?origin={{ .Request.URL | urlenc }}
          when:
            - error:
                - type: authentication_error
                  raised_by: reject_requests
              request_headers:
                Accept:
                  - Bar
  default:
    methods:
      - GET
      - POST
    execute:
      - authenticator: reject_requests
      - finalizer: create_jwt
    on_error:
      - error_handler: redirect_to_login

  providers:
    file_system:
      src: ./upstream-rules.yaml
      watch: true
