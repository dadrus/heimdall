apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: tempo-datasource
  namespace: monitoring
spec:
  datasource:
    name: Tempo
    type: tempo
    url: http://tempo:3100
    isDefault: false
    uid: TEMPO
    access: proxy
    jsonData:
      tracesToLogsV2:
        datasourceUid: LOKI
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        tags: [ 'job', 'instance', 'pod', 'namespace' ]
        filterByTraceID: true
        filterBySpanID: true
      tracesToMetrics:
        datasourceUid: PROMETHEUS
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        tags: [ { key: 'service.name', value: 'service' }, { key: 'job' } ]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      #tracesToProfiles:
      #  datasourceUid: PYROSCOPE
      #  tags: ['job', 'instance', 'pod', 'namespace']
      #  profileTypeId: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds'
      #  customQuery: true
      #  query: 'method="$${__span.tags.method}"'
      serviceMap:
        datasourceUid: PROMETHEUS
      nodeGraph:
        enabled: true
      search:
        hide: false
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
      spanBar:
        type: 'Tag'
        tag: 'http.path'
      #streamingEnabled:
      #  search: true
  instanceSelector:
    matchLabels:
      dashboards: grafana
